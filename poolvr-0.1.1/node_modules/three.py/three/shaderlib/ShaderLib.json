{
  "basic": {
    "uniforms": {
      "diffuse": {
        "type": "c",
        "value": {
          "r": 0.9333333333333333,
          "g": 0.9333333333333333,
          "b": 0.9333333333333333
        }
      },
      "opacity": {
        "type": "1f",
        "value": 1
      },
      "map": {
        "type": "t",
        "value": null
      },
      "offsetRepeat": {
        "type": "v4",
        "value": {
          "x": 0,
          "y": 0,
          "z": 1,
          "w": 1
        }
      },
      "specularMap": {
        "type": "t",
        "value": null
      },
      "alphaMap": {
        "type": "t",
        "value": null
      },
      "envMap": {
        "type": "t",
        "value": null
      },
      "flipEnvMap": {
        "type": "1f",
        "value": -1
      },
      "reflectivity": {
        "type": "1f",
        "value": 1
      },
      "refractionRatio": {
        "type": "1f",
        "value": 0.98
      },
      "aoMap": {
        "type": "t",
        "value": null
      },
      "aoMapIntensity": {
        "type": "1f",
        "value": 1
      },
      "fogDensity": {
        "type": "1f",
        "value": 0.00025
      },
      "fogNear": {
        "type": "1f",
        "value": 1
      },
      "fogFar": {
        "type": "1f",
        "value": 2000
      },
      "fogColor": {
        "type": "c",
        "value": {
          "r": 1,
          "g": 1,
          "b": 1
        }
      }
    },
    "vertexShader": "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\n}\n",
    "fragmentShader": "uniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight;\n\treflectedLight.directDiffuse = vec3( 0.0 );\n\treflectedLight.directSpecular = vec3( 0.0 );\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\n\treflectedLight.indirectSpecular = vec3( 0.0 );\n\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n"
  },
  "lambert": {
    "uniforms": {
      "diffuse": {
        "type": "c",
        "value": {
          "r": 0.9333333333333333,
          "g": 0.9333333333333333,
          "b": 0.9333333333333333
        }
      },
      "opacity": {
        "type": "1f",
        "value": 1
      },
      "map": {
        "type": "t",
        "value": null
      },
      "offsetRepeat": {
        "type": "v4",
        "value": {
          "x": 0,
          "y": 0,
          "z": 1,
          "w": 1
        }
      },
      "specularMap": {
        "type": "t",
        "value": null
      },
      "alphaMap": {
        "type": "t",
        "value": null
      },
      "envMap": {
        "type": "t",
        "value": null
      },
      "flipEnvMap": {
        "type": "1f",
        "value": -1
      },
      "reflectivity": {
        "type": "1f",
        "value": 1
      },
      "refractionRatio": {
        "type": "1f",
        "value": 0.98
      },
      "aoMap": {
        "type": "t",
        "value": null
      },
      "aoMapIntensity": {
        "type": "1f",
        "value": 1
      },
      "lightMap": {
        "type": "t",
        "value": null
      },
      "lightMapIntensity": {
        "type": "1f",
        "value": 1
      },
      "emissiveMap": {
        "type": "t",
        "value": null
      },
      "fogDensity": {
        "type": "1f",
        "value": 0.00025
      },
      "fogNear": {
        "type": "1f",
        "value": 1
      },
      "fogFar": {
        "type": "1f",
        "value": 2000
      },
      "fogColor": {
        "type": "c",
        "value": {
          "r": 1,
          "g": 1,
          "b": 1
        }
      },
      "ambientLightColor": {
        "type": "3fv",
        "value": []
      },
      "directionalLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "direction": {
            "type": "v3"
          },
          "color": {
            "type": "c"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "directionalShadowMap": {
        "type": "tv",
        "value": []
      },
      "directionalShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "spotLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "color": {
            "type": "c"
          },
          "position": {
            "type": "v3"
          },
          "direction": {
            "type": "v3"
          },
          "distance": {
            "type": "1f"
          },
          "coneCos": {
            "type": "1f"
          },
          "penumbraCos": {
            "type": "1f"
          },
          "decay": {
            "type": "1f"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "spotShadowMap": {
        "type": "tv",
        "value": []
      },
      "spotShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "pointLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "color": {
            "type": "c"
          },
          "position": {
            "type": "v3"
          },
          "decay": {
            "type": "1f"
          },
          "distance": {
            "type": "1f"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "pointShadowMap": {
        "type": "tv",
        "value": []
      },
      "pointShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "hemisphereLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "direction": {
            "type": "v3"
          },
          "skyColor": {
            "type": "c"
          },
          "groundColor": {
            "type": "c"
          }
        }
      },
      "emissive": {
        "type": "c",
        "value": {
          "r": 0,
          "g": 0,
          "b": 0
        }
      }
    },
    "vertexShader": "#define LAMBERT\n\nvarying vec3 vLightFront;\n\n#ifdef DOUBLE_SIDED\n\n\tvarying vec3 vLightBack;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\n}\n",
    "fragmentShader": "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\n\n#ifdef DOUBLE_SIDED\n\n\tvarying vec3 vLightBack;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n"
  },
  "phong": {
    "uniforms": {
      "diffuse": {
        "type": "c",
        "value": {
          "r": 0.9333333333333333,
          "g": 0.9333333333333333,
          "b": 0.9333333333333333
        }
      },
      "opacity": {
        "type": "1f",
        "value": 1
      },
      "map": {
        "type": "t",
        "value": null
      },
      "offsetRepeat": {
        "type": "v4",
        "value": {
          "x": 0,
          "y": 0,
          "z": 1,
          "w": 1
        }
      },
      "specularMap": {
        "type": "t",
        "value": null
      },
      "alphaMap": {
        "type": "t",
        "value": null
      },
      "envMap": {
        "type": "t",
        "value": null
      },
      "flipEnvMap": {
        "type": "1f",
        "value": -1
      },
      "reflectivity": {
        "type": "1f",
        "value": 1
      },
      "refractionRatio": {
        "type": "1f",
        "value": 0.98
      },
      "aoMap": {
        "type": "t",
        "value": null
      },
      "aoMapIntensity": {
        "type": "1f",
        "value": 1
      },
      "lightMap": {
        "type": "t",
        "value": null
      },
      "lightMapIntensity": {
        "type": "1f",
        "value": 1
      },
      "emissiveMap": {
        "type": "t",
        "value": null
      },
      "bumpMap": {
        "type": "t",
        "value": null
      },
      "bumpScale": {
        "type": "1f",
        "value": 1
      },
      "normalMap": {
        "type": "t",
        "value": null
      },
      "normalScale": {
        "type": "v2",
        "value": {
          "x": 1,
          "y": 1
        }
      },
      "displacementMap": {
        "type": "t",
        "value": null
      },
      "displacementScale": {
        "type": "1f",
        "value": 1
      },
      "displacementBias": {
        "type": "1f",
        "value": 0
      },
      "fogDensity": {
        "type": "1f",
        "value": 0.00025
      },
      "fogNear": {
        "type": "1f",
        "value": 1
      },
      "fogFar": {
        "type": "1f",
        "value": 2000
      },
      "fogColor": {
        "type": "c",
        "value": {
          "r": 1,
          "g": 1,
          "b": 1
        }
      },
      "ambientLightColor": {
        "type": "3fv",
        "value": []
      },
      "directionalLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "direction": {
            "type": "v3"
          },
          "color": {
            "type": "c"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "directionalShadowMap": {
        "type": "tv",
        "value": []
      },
      "directionalShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "spotLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "color": {
            "type": "c"
          },
          "position": {
            "type": "v3"
          },
          "direction": {
            "type": "v3"
          },
          "distance": {
            "type": "1f"
          },
          "coneCos": {
            "type": "1f"
          },
          "penumbraCos": {
            "type": "1f"
          },
          "decay": {
            "type": "1f"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "spotShadowMap": {
        "type": "tv",
        "value": []
      },
      "spotShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "pointLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "color": {
            "type": "c"
          },
          "position": {
            "type": "v3"
          },
          "decay": {
            "type": "1f"
          },
          "distance": {
            "type": "1f"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "pointShadowMap": {
        "type": "tv",
        "value": []
      },
      "pointShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "hemisphereLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "direction": {
            "type": "v3"
          },
          "skyColor": {
            "type": "c"
          },
          "groundColor": {
            "type": "c"
          }
        }
      },
      "emissive": {
        "type": "c",
        "value": {
          "r": 0,
          "g": 0,
          "b": 0
        }
      },
      "specular": {
        "type": "c",
        "value": {
          "r": 0.06666666666666667,
          "g": 0.06666666666666667,
          "b": 0.06666666666666667
        }
      },
      "shininess": {
        "type": "1f",
        "value": 30
      }
    },
    "vertexShader": "#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\n}\n",
    "fragmentShader": "#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n"
  },
  "standard": {
    "uniforms": {
      "diffuse": {
        "type": "c",
        "value": {
          "r": 0.9333333333333333,
          "g": 0.9333333333333333,
          "b": 0.9333333333333333
        }
      },
      "opacity": {
        "type": "1f",
        "value": 1
      },
      "map": {
        "type": "t",
        "value": null
      },
      "offsetRepeat": {
        "type": "v4",
        "value": {
          "x": 0,
          "y": 0,
          "z": 1,
          "w": 1
        }
      },
      "specularMap": {
        "type": "t",
        "value": null
      },
      "alphaMap": {
        "type": "t",
        "value": null
      },
      "envMap": {
        "type": "t",
        "value": null
      },
      "flipEnvMap": {
        "type": "1f",
        "value": -1
      },
      "reflectivity": {
        "type": "1f",
        "value": 1
      },
      "refractionRatio": {
        "type": "1f",
        "value": 0.98
      },
      "aoMap": {
        "type": "t",
        "value": null
      },
      "aoMapIntensity": {
        "type": "1f",
        "value": 1
      },
      "lightMap": {
        "type": "t",
        "value": null
      },
      "lightMapIntensity": {
        "type": "1f",
        "value": 1
      },
      "emissiveMap": {
        "type": "t",
        "value": null
      },
      "bumpMap": {
        "type": "t",
        "value": null
      },
      "bumpScale": {
        "type": "1f",
        "value": 1
      },
      "normalMap": {
        "type": "t",
        "value": null
      },
      "normalScale": {
        "type": "v2",
        "value": {
          "x": 1,
          "y": 1
        }
      },
      "displacementMap": {
        "type": "t",
        "value": null
      },
      "displacementScale": {
        "type": "1f",
        "value": 1
      },
      "displacementBias": {
        "type": "1f",
        "value": 0
      },
      "roughnessMap": {
        "type": "t",
        "value": null
      },
      "metalnessMap": {
        "type": "t",
        "value": null
      },
      "fogDensity": {
        "type": "1f",
        "value": 0.00025
      },
      "fogNear": {
        "type": "1f",
        "value": 1
      },
      "fogFar": {
        "type": "1f",
        "value": 2000
      },
      "fogColor": {
        "type": "c",
        "value": {
          "r": 1,
          "g": 1,
          "b": 1
        }
      },
      "ambientLightColor": {
        "type": "3fv",
        "value": []
      },
      "directionalLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "direction": {
            "type": "v3"
          },
          "color": {
            "type": "c"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "directionalShadowMap": {
        "type": "tv",
        "value": []
      },
      "directionalShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "spotLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "color": {
            "type": "c"
          },
          "position": {
            "type": "v3"
          },
          "direction": {
            "type": "v3"
          },
          "distance": {
            "type": "1f"
          },
          "coneCos": {
            "type": "1f"
          },
          "penumbraCos": {
            "type": "1f"
          },
          "decay": {
            "type": "1f"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "spotShadowMap": {
        "type": "tv",
        "value": []
      },
      "spotShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "pointLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "color": {
            "type": "c"
          },
          "position": {
            "type": "v3"
          },
          "decay": {
            "type": "1f"
          },
          "distance": {
            "type": "1f"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "pointShadowMap": {
        "type": "tv",
        "value": []
      },
      "pointShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "hemisphereLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "direction": {
            "type": "v3"
          },
          "skyColor": {
            "type": "c"
          },
          "groundColor": {
            "type": "c"
          }
        }
      },
      "emissive": {
        "type": "c",
        "value": {
          "r": 0,
          "g": 0,
          "b": 0
        }
      },
      "roughness": {
        "type": "1f",
        "value": 0.5
      },
      "metalness": {
        "type": "1f",
        "value": 0
      },
      "envMapIntensity": {
        "type": "1f",
        "value": 1
      }
    },
    "vertexShader": "#define PHYSICAL\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\n}\n",
    "fragmentShader": "#define PHYSICAL\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\nuniform float envMapIntensity; // temporary\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n"
  },
  "points": {
    "uniforms": {
      "diffuse": {
        "type": "c",
        "value": {
          "r": 0.9333333333333333,
          "g": 0.9333333333333333,
          "b": 0.9333333333333333
        }
      },
      "opacity": {
        "type": "1f",
        "value": 1
      },
      "size": {
        "type": "1f",
        "value": 1
      },
      "scale": {
        "type": "1f",
        "value": 1
      },
      "map": {
        "type": "t",
        "value": null
      },
      "offsetRepeat": {
        "type": "v4",
        "value": {
          "x": 0,
          "y": 0,
          "z": 1,
          "w": 1
        }
      },
      "fogDensity": {
        "type": "1f",
        "value": 0.00025
      },
      "fogNear": {
        "type": "1f",
        "value": 1
      },
      "fogFar": {
        "type": "1f",
        "value": 2000
      },
      "fogColor": {
        "type": "c",
        "value": {
          "r": 1,
          "g": 1,
          "b": 1
        }
      }
    },
    "vertexShader": "uniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\n}\n",
    "fragmentShader": "uniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n"
  },
  "dashed": {
    "uniforms": {
      "diffuse": {
        "type": "c",
        "value": {
          "r": 0.9333333333333333,
          "g": 0.9333333333333333,
          "b": 0.9333333333333333
        }
      },
      "opacity": {
        "type": "1f",
        "value": 1
      },
      "map": {
        "type": "t",
        "value": null
      },
      "offsetRepeat": {
        "type": "v4",
        "value": {
          "x": 0,
          "y": 0,
          "z": 1,
          "w": 1
        }
      },
      "specularMap": {
        "type": "t",
        "value": null
      },
      "alphaMap": {
        "type": "t",
        "value": null
      },
      "envMap": {
        "type": "t",
        "value": null
      },
      "flipEnvMap": {
        "type": "1f",
        "value": -1
      },
      "reflectivity": {
        "type": "1f",
        "value": 1
      },
      "refractionRatio": {
        "type": "1f",
        "value": 0.98
      },
      "fogDensity": {
        "type": "1f",
        "value": 0.00025
      },
      "fogNear": {
        "type": "1f",
        "value": 1
      },
      "fogFar": {
        "type": "1f",
        "value": 2000
      },
      "fogColor": {
        "type": "c",
        "value": {
          "r": 1,
          "g": 1,
          "b": 1
        }
      },
      "scale": {
        "type": "1f",
        "value": 1
      },
      "dashSize": {
        "type": "1f",
        "value": 1
      },
      "totalSize": {
        "type": "1f",
        "value": 2
      }
    },
    "vertexShader": "uniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\n\tvLineDistance = scale * lineDistance;\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n}\n",
    "fragmentShader": "uniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n"
  },
  "depth": {
    "uniforms": {
      "diffuse": {
        "type": "c",
        "value": {
          "r": 0.9333333333333333,
          "g": 0.9333333333333333,
          "b": 0.9333333333333333
        }
      },
      "opacity": {
        "type": "1f",
        "value": 1
      },
      "map": {
        "type": "t",
        "value": null
      },
      "offsetRepeat": {
        "type": "v4",
        "value": {
          "x": 0,
          "y": 0,
          "z": 1,
          "w": 1
        }
      },
      "specularMap": {
        "type": "t",
        "value": null
      },
      "alphaMap": {
        "type": "t",
        "value": null
      },
      "envMap": {
        "type": "t",
        "value": null
      },
      "flipEnvMap": {
        "type": "1f",
        "value": -1
      },
      "reflectivity": {
        "type": "1f",
        "value": 1
      },
      "refractionRatio": {
        "type": "1f",
        "value": 0.98
      },
      "displacementMap": {
        "type": "t",
        "value": null
      },
      "displacementScale": {
        "type": "1f",
        "value": 1
      },
      "displacementBias": {
        "type": "1f",
        "value": 0
      }
    },
    "vertexShader": "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n}\n",
    "fragmentShader": "#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\n\t#endif\n\n}\n"
  },
  "normal": {
    "uniforms": {
      "opacity": {
        "type": "1f",
        "value": 1
      }
    },
    "vertexShader": "varying vec3 vNormal;\n\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvNormal = normalize( normalMatrix * normal );\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n}\n",
    "fragmentShader": "uniform float opacity;\nvarying vec3 vNormal;\n\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n\n\t#include <logdepthbuf_fragment>\n\n}\n"
  },
  "cube": {
    "uniforms": {
      "tCube": {
        "type": "t",
        "value": null
      },
      "tFlip": {
        "type": "1f",
        "value": -1
      }
    },
    "vertexShader": "varying vec3 vWorldPosition;\n\n#include <common>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n}\n",
    "fragmentShader": "uniform samplerCube tCube;\nuniform float tFlip;\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\n\t#include <logdepthbuf_fragment>\n\n}\n"
  },
  "equirect": {
    "uniforms": {
      "tEquirect": {
        "type": "t",
        "value": null
      },
      "tFlip": {
        "type": "1f",
        "value": -1
      }
    },
    "vertexShader": "varying vec3 vWorldPosition;\n\n#include <common>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n}\n",
    "fragmentShader": "uniform sampler2D tEquirect;\nuniform float tFlip;\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\t// \tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t#include <logdepthbuf_fragment>\n\n}\n"
  },
  "distanceRGBA": {
    "uniforms": {
      "lightPos": {
        "type": "v3",
        "value": {
          "x": 0,
          "y": 0,
          "z": 0
        }
      }
    },
    "vertexShader": "varying vec4 vWorldPosition;\n\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition;\n\n}\n",
    "fragmentShader": "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n\n}\n"
  },
  "physical": {
    "uniforms": {
      "diffuse": {
        "type": "c",
        "value": {
          "r": 0.9333333333333333,
          "g": 0.9333333333333333,
          "b": 0.9333333333333333
        }
      },
      "opacity": {
        "type": "1f",
        "value": 1
      },
      "map": {
        "type": "t",
        "value": null
      },
      "offsetRepeat": {
        "type": "v4",
        "value": {
          "x": 0,
          "y": 0,
          "z": 1,
          "w": 1
        }
      },
      "specularMap": {
        "type": "t",
        "value": null
      },
      "alphaMap": {
        "type": "t",
        "value": null
      },
      "envMap": {
        "type": "t",
        "value": null
      },
      "flipEnvMap": {
        "type": "1f",
        "value": -1
      },
      "reflectivity": {
        "type": "1f",
        "value": 1
      },
      "refractionRatio": {
        "type": "1f",
        "value": 0.98
      },
      "aoMap": {
        "type": "t",
        "value": null
      },
      "aoMapIntensity": {
        "type": "1f",
        "value": 1
      },
      "lightMap": {
        "type": "t",
        "value": null
      },
      "lightMapIntensity": {
        "type": "1f",
        "value": 1
      },
      "emissiveMap": {
        "type": "t",
        "value": null
      },
      "bumpMap": {
        "type": "t",
        "value": null
      },
      "bumpScale": {
        "type": "1f",
        "value": 1
      },
      "normalMap": {
        "type": "t",
        "value": null
      },
      "normalScale": {
        "type": "v2",
        "value": {
          "x": 1,
          "y": 1
        }
      },
      "displacementMap": {
        "type": "t",
        "value": null
      },
      "displacementScale": {
        "type": "1f",
        "value": 1
      },
      "displacementBias": {
        "type": "1f",
        "value": 0
      },
      "roughnessMap": {
        "type": "t",
        "value": null
      },
      "metalnessMap": {
        "type": "t",
        "value": null
      },
      "fogDensity": {
        "type": "1f",
        "value": 0.00025
      },
      "fogNear": {
        "type": "1f",
        "value": 1
      },
      "fogFar": {
        "type": "1f",
        "value": 2000
      },
      "fogColor": {
        "type": "c",
        "value": {
          "r": 1,
          "g": 1,
          "b": 1
        }
      },
      "ambientLightColor": {
        "type": "3fv",
        "value": []
      },
      "directionalLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "direction": {
            "type": "v3"
          },
          "color": {
            "type": "c"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "directionalShadowMap": {
        "type": "tv",
        "value": []
      },
      "directionalShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "spotLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "color": {
            "type": "c"
          },
          "position": {
            "type": "v3"
          },
          "direction": {
            "type": "v3"
          },
          "distance": {
            "type": "1f"
          },
          "coneCos": {
            "type": "1f"
          },
          "penumbraCos": {
            "type": "1f"
          },
          "decay": {
            "type": "1f"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "spotShadowMap": {
        "type": "tv",
        "value": []
      },
      "spotShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "pointLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "color": {
            "type": "c"
          },
          "position": {
            "type": "v3"
          },
          "decay": {
            "type": "1f"
          },
          "distance": {
            "type": "1f"
          },
          "shadow": {
            "type": "1i"
          },
          "shadowBias": {
            "type": "1f"
          },
          "shadowRadius": {
            "type": "1f"
          },
          "shadowMapSize": {
            "type": "v2"
          }
        }
      },
      "pointShadowMap": {
        "type": "tv",
        "value": []
      },
      "pointShadowMatrix": {
        "type": "m4v",
        "value": []
      },
      "hemisphereLights": {
        "type": "sa",
        "value": [],
        "properties": {
          "direction": {
            "type": "v3"
          },
          "skyColor": {
            "type": "c"
          },
          "groundColor": {
            "type": "c"
          }
        }
      },
      "emissive": {
        "type": "c",
        "value": {
          "r": 0,
          "g": 0,
          "b": 0
        }
      },
      "roughness": {
        "type": "1f",
        "value": 0.5
      },
      "metalness": {
        "type": "1f",
        "value": 0
      },
      "envMapIntensity": {
        "type": "1f",
        "value": 1
      }
    },
    "vertexShader": "#define PHYSICAL\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\n}\n",
    "fragmentShader": "#define PHYSICAL\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\nuniform float envMapIntensity; // temporary\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n"
  }
}