{
  "_args": [
    [
      "cannon@git://github.com/jzitelli/cannon.js.git",
      "C:\\Users\\zemed\\GitHub\\gh-pages\\poolvr\\poolvr-0.1.1"
    ]
  ],
  "_from": "git://github.com/jzitelli/cannon.js.git",
  "_id": "cannon@0.6.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/cannon",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/jzitelli/cannon.js/master/package.json",
      "gitUrl": "git://github.com/jzitelli/cannon.js.git",
      "httpsUrl": "git+https://github.com/jzitelli/cannon.js.git",
      "shortcut": "github:jzitelli/cannon.js",
      "ssh": "git@github.com:jzitelli/cannon.js.git",
      "sshUrl": "git+ssh://git@github.com/jzitelli/cannon.js.git",
      "type": "github"
    },
    "name": "cannon",
    "raw": "cannon@git://github.com/jzitelli/cannon.js.git",
    "rawSpec": "git://github.com/jzitelli/cannon.js.git",
    "scope": null,
    "spec": "git://github.com/jzitelli/cannon.js.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/jzitelli/cannon.js.git#18696cc17f79268499f9bb238fd867e3bf76b411",
  "_shasum": "589c72a0ef35eacc52ae5a9c5771daf98628c5d5",
  "_shrinkwrap": null,
  "_spec": "cannon@git://github.com/jzitelli/cannon.js.git",
  "_where": "C:\\Users\\zemed\\GitHub\\gh-pages\\poolvr\\poolvr-0.1.1",
  "author": {
    "email": "schteppe@gmail.com",
    "name": "Stefan Hedman",
    "url": "http://steffe.se"
  },
  "bugs": {
    "url": "https://github.com/schteppe/cannon.js/issues"
  },
  "dependencies": {},
  "description": "A lightweight 3D physics engine written in JavaScript.",
  "devDependencies": {
    "browserify": "*",
    "grunt": "~0.4.0",
    "grunt-browserify": "^2.1.4",
    "grunt-contrib-concat": "~0.1.3",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "^0.4.1",
    "grunt-contrib-uglify": "^0.5.1",
    "grunt-contrib-yuidoc": "^0.5.2",
    "jshint": "latest",
    "nodeunit": "^0.9.0",
    "uglify-js": "latest"
  },
  "engines": {
    "node": "*"
  },
  "gitHead": "18696cc17f79268499f9bb238fd867e3bf76b411",
  "homepage": "https://github.com/schteppe/cannon.js",
  "keywords": [
    "cannon.js",
    "cannon",
    "physics",
    "engine",
    "3d"
  ],
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "main": "./src/Cannon.js",
  "name": "cannon",
  "optionalDependencies": {},
  "readme": "# cannon.js\r\n\r\n### Lightweight 3D physics for the web\r\nInspired by [three.js](https://github.com/mrdoob/three.js) and [ammo.js](https://github.com/kripken/ammo.js), and driven by the fact that the web lacks a physics engine, here comes cannon.js.\r\nThe rigid body physics engine includes simple collision detection, various body shapes, contacts, friction and constraints.\r\n\r\n[Demos](http://schteppe.github.com/cannon.js) - [Documentation](http://schteppe.github.com/cannon.js/docs) - [Rendering hints](https://github.com/schteppe/cannon.js/tree/master/examples) - [NPM package](https://npmjs.org/package/cannon) - [CDN](https://cdnjs.com/libraries/cannon.js)\r\n\r\n### Browser install\r\n\r\nJust include [cannon.js](https://github.com/schteppe/cannon.js/releases/download/v0.6.2/cannon.js) or [cannon.min.js](https://github.com/schteppe/cannon.js/releases/download/v0.6.2/cannon.min.js) in your html and you're done:\r\n\r\n```html\r\n<script src=\"cannon.min.js\"></script>\r\n```\r\n\r\n### Node.js install\r\n\r\nInstall the cannon package via NPM:\r\n\r\n```bash\r\nnpm install --save cannon\r\n```\r\n\r\nAlternatively, point to the Github repo directly to get the very latest version:\r\n\r\n```bash\r\nnpm install --save schteppe/cannon.js\r\n```\r\n\r\n### Example\r\n\r\nThe sample code below creates a sphere on a plane, steps the simulation, and prints the sphere simulation to the console. Note that Cannon.js uses [SI units](http://en.wikipedia.org/wiki/International_System_of_Units) (metre, kilogram, second, etc.).\r\n\r\n```javascript\r\n// Setup our world\r\nvar world = new CANNON.World();\r\nworld.gravity.set(0, 0, -9.82); // m/sÂ²\r\n\r\n// Create a sphere\r\nvar radius = 1; // m\r\nvar sphereBody = new CANNON.Body({\r\n   mass: 5, // kg\r\n   position: new CANNON.Vec3(0, 0, 10), // m\r\n   shape: new CANNON.Sphere(radius)\r\n});\r\nworld.addBody(sphereBody);\r\n\r\n// Create a plane\r\nvar groundBody = new CANNON.Body({\r\n    mass: 0 // mass == 0 makes the body static\r\n});\r\nvar groundShape = new CANNON.Plane();\r\ngroundBody.addShape(groundShape);\r\nworld.addBody(groundBody);\r\n\r\nvar fixedTimeStep = 1.0 / 60.0; // seconds\r\nvar maxSubSteps = 3;\r\n\r\n// Start the simulation loop\r\nvar lastTime;\r\n(function simloop(time){\r\n  requestAnimationFrame(simloop);\r\n  if(lastTime !== undefined){\r\n     var dt = (time - lastTime) / 1000;\r\n     world.step(fixedTimeStep, dt, maxSubSteps);\r\n  }\r\n  console.log(\"Sphere z position: \" + sphereBody.position.z);\r\n  lastTime = time;\r\n})();\r\n```\r\n\r\nIf you want to know how to use cannon.js with a rendering engine, for example Three.js, see the [Examples](examples).\r\n\r\n### Features\r\n* Rigid body dynamics\r\n* Discrete collision detection\r\n* Contacts, friction and restitution\r\n* Constraints\r\n   * PointToPoint (a.k.a. ball/socket joint)\r\n   * Distance\r\n   * Hinge (with optional motor)\r\n   * Lock\r\n   * ConeTwist\r\n* Gauss-Seidel constraint solver and an island split algorithm\r\n* Collision filters\r\n* Body sleeping\r\n* Experimental SPH / fluid support\r\n* Various shapes and collision algorithms (see table below)\r\n\r\n|             | [Sphere](http://schteppe.github.io/cannon.js/docs/classes/Sphere.html) | [Plane](http://schteppe.github.io/cannon.js/docs/classes/Plane.html) | [Box](http://schteppe.github.io/cannon.js/docs/classes/Box.html) | [Convex](http://schteppe.github.io/cannon.js/docs/classes/ConvexPolyhedron.html) | [Particle](http://schteppe.github.io/cannon.js/docs/classes/Particle.html) | [Heightfield](http://schteppe.github.io/cannon.js/docs/classes/Heightfield.html) | [Trimesh](http://schteppe.github.io/cannon.js/docs/classes/Trimesh.html) |\r\n| :-----------|:------:|:-----:|:---:|:------:|:--------:|:-----------:|:-------:|\r\n| Sphere      | Yes    | Yes   | Yes | Yes    | Yes      | Yes         | Yes     |\r\n| Plane       | -      | -     | Yes | Yes    | Yes      | -           | Yes     |\r\n| Box         | -      | -     | Yes | Yes    | Yes      | Yes         | (todo)  |\r\n| Cylinder    | -      | -     | Yes | Yes    | Yes      | Yes         | (todo)  |\r\n| Convex      | -      | -     | -   | Yes    | Yes      | Yes         | (todo)  |\r\n| Particle    | -      | -     | -   | -      | -        | (todo)      | (todo)  |\r\n| Heightfield | -      | -     | -   | -      | -        | -           | (todo)  |\r\n| Trimesh     | -      | -     | -   | -      | -        | -           | -       |\r\n\r\n### Todo\r\nThe simpler todos are marked with ```@todo``` in the code. Github Issues can and should also be used for todos.\r\n\r\n### Help\r\nCreate an [issue](https://github.com/schteppe/cannon.js/issues) if you need help.\r\n",
  "readmeFilename": "README.markdown",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/schteppe/cannon.js.git"
  },
  "version": "0.6.2"
}
