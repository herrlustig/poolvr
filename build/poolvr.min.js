/* ############################################################################

  poolvr v0.1.0 2016-02-16

  https://jzitelli.github.io/poolvr
  git+https://github.com/jzitelli/poolvr.git

The MIT License (MIT)

Copyright (c) 2015 Jeffrey Zitelli

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

############################################################################ */

function WebVRApplication(a,b){"use strict";this.scene=a,b=b||{};var c=b.rendererOptions,d=b.onResetVRSensor,e=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);this.camera=e,this.renderer=new THREE.WebGLRenderer(c),this.renderer.setPixelRatio(window.devicePixelRatio);var f=this.renderer.domElement;document.body.appendChild(f),f.id="renderer",this.vrEffect=new THREE.VREffect(this.renderer,function(a){console.log("error creating VREffect: "+a)}),this.vrEffect.setSize(window.innerWidth,window.innerHeight),this.vrControls=new THREE.VRControls(this.camera,function(a){console.log("error creating VRControls: "+a)}),this.vrControls.enabled=!0,this.vrManager=new WebVRManager(this.renderer,this.vrEffect,{hideButton:!1}),this.toggleVRControls=function(){this.vrControls.enabled?(this.vrControls.enabled=!1,this.camera.position.set(0,0,0),this.camera.quaternion.set(0,0,0,1)):this.vrControls.enabled=!0}.bind(this);var g=new THREE.Vector3;this.resetVRSensor=function(){g.copy(this.camera.position);var a=this.camera.rotation.y;this.vrControls.resetSensor(),this.vrControls.update(),d&&d(a,g)}.bind(this);var h=new THREE.MeshBasicMaterial({color:15654314,wireframe:!0});this.toggleWireframe=function(){this.scene.overrideMaterial?this.scene.overrideMaterial=null:this.scene.overrideMaterial=h}.bind(this)}function combineObjects(a,b){"use strict";var c,d={};for(c in a)d[c]=a[c];for(c in b)d.hasOwnProperty(c)||(d[c]=b[c]);return d}function makeObjectArray(a,b){"use strict";return b=b||"key",Object.keys(a).map(function(c){var d={};d[b]=c;for(var e in a[c])d[e]=a[c][e];return d})}function addTool(a,b,c){"use strict";function d(){P.position.copy(Q.interpolatedPosition),B.worldToLocal(P.position),W.position.set(P.position.x,(wa+.001-B.position.y-a.position.y)/B.scale.y,P.position.z)}function e(b,c,d){var e=0,f=0,g=0,h=0;b&&(e+=b.getValue("moveToolForwards")-b.getValue("moveToolBackwards"),f+=b.getValue("moveToolUp")-b.getValue("moveToolDown"),g+=b.getValue("moveToolRight")-b.getValue("moveToolLeft"),h+=b.getValue("rotateToolCW")-b.getValue("rotateToolCCW")),c&&(a.toolMode?(f+=c.getValue("toolFloat"),g+=c.getValue("toolStrafe")):(e-=c.getValue("toolDrive"),h-=c.getValue("toolStrafe"))),(0!==e||0!==g||0!==f||0!==h)&&(B.position.x+=.16*d*g,B.position.z+=-.16*d*e,B.position.y+=.16*d*f,n+=.15*d*h,B.quaternion.setFromAxisAngle(D,n),E.visible===!1&&(E.visible=!0,P.material.opacity=1,R&&(R.material.opacity=1),F.opacity=r))}function f(){var b=x.frame();if(b.valid&&b.id!=va){va=b.id;var c=b.interactionBox;if(c.valid&&(E.position.fromArray(c.center),E.scale.set(c.width*C,c.height*C,c.depth*C)),B.getWorldQuaternion(xa),1===b.tools.length){var d=b.tools[0];(P.visible===!1||P.material.opacity<1)&&(P.visible=!0,W.visible=!0,E.visible=!0,P.material.opacity=1,R&&(R.material.opacity=1),F.opacity=r),za.fromArray(d.stabilizedTipPosition),P.position.copy(za),W.position.set(P.position.x,(wa+.001-B.position.y-a.position.y)/B.scale.y,P.position.z),B.localToWorld(za),Q.position.copy(za),ya.fromArray(d.direction),P.quaternion.setFromUnitVectors(D,ya),Z.quaternion.copy(P.quaternion),ya.applyQuaternion(xa),Ca.copy(ya),Q.quaternion.setFromVectors(Ba,Ca),Aa.fromArray(d.tipVelocity),Aa.applyQuaternion(xa),Aa.multiplyScalar(.001),Q.velocity.copy(Aa),d.timeVisible>o&&(Q.sleepState===CANNON.Body.SLEEPING&&(Q.wakeUp(),R&&R.material.color.setHex(16711680)),d.timeVisible>p&&F.opacity>.1&&(F.opacity*=.93))}else Q.sleepState===CANNON.Body.AWAKE?(Q.sleep(),R&&R.material.color.setHex(t)):P.visible&&P.material.opacity>.1?(P.material.opacity*=.8,F.opacity*=.8,R&&(R.material.opacity=P.material.opacity)):(P.visible=!1,E.visible=!1,W.visible=!1);var e,f;aa.visible=ba.visible=!1;for(var g=0;g<b.hands.length;g++)if(e=b.hands[g],e.confidence>q){ca[g].visible=!0,da.opacity=.5*da.opacity+.5*(e.confidence-q)/(1-q),ya.fromArray(e.arm.basis[2]),ia[g].quaternion.setFromUnitVectors(D,ya);var h=e.arm.center();ia[g].position.fromArray(h),ya.fromArray(e.palmNormal),ma[g].quaternion.setFromUnitVectors(D,ya),ma[g].position.fromArray(e.palmPosition);for(var i=0;i<e.fingers.length;i++)f=e.fingers[i],pa[g][i].position.fromArray(f.tipPosition),ra[g][i].position.fromArray(f.bones[1].nextJoint),ta[g][i].position.fromArray(f.bones[2].nextJoint)}}}c=c||{};var g,h,i=c.toolLength||.5,j=c.toolRadius||.013,k=c.toolMass||.04,l=c.tipShape||"Sphere";"Cylinder"===l?g=c.tipRadius||j:(g=c.tipRadius||.95*j,"Ellipsoid"===l&&(h=c.tipMinorRadius||.25*g));var m=new THREE.Vector3(0,-.4,-i-.2);c.toolOffset&&m.fromArray(c.toolOffset);var n=c.toolRotation||0,o=c.toolTimeA||.25,p=c.toolTimeB||o+1.5,q=c.minConfidence||.3,r=c.interactionPlaneOpacity||(c.useBasicMaterials===!1?.18:.25),s=c.stickColor||15645593,t=c.tipColor||17544,u=c.handColor||1127321,v=c.host||"127.0.0.1",w=c.port||6437,x=new Leap.Controller({background:!0,host:v,port:w}),y=c.onConnect||function(){console.log("Leap Motion WebSocket connected")};x.on("connect",y);var z=c.onStreamingStarted||function(){console.log("Leap Motion streaming started")};x.on("streamingStarted",z);var A=c.onStreamingStopped||function(){console.warn("Leap Motion streaming stopped")};x.on("streamingStopped",A),x.connect();var B=new THREE.Object3D;B.position.copy(m);var C=.001;B.scale.set(C,C,C);var D=new THREE.Vector3(0,1,0);B.quaternion.setFromAxisAngle(D,n),a.add(B);var E=new THREE.Object3D;B.add(E);var F=new THREE.MeshBasicMaterial({color:56644,transparent:!0,opacity:r}),G=new THREE.PlaneBufferGeometry(1/C,1/C),H=new THREE.Mesh(G,F);E.add(H),H=H.clone(),H.position.z=.5/C,E.add(H),H=H.clone(),H.position.z=-0.5/C,E.add(H),E.visible=!1;var I=new THREE.BoxGeometry(.0254*3/C,.0127/C,.0254*1.2/C),J=new THREE.BufferGeometry;J.fromGeometry(I),I.dispose();var K=new THREE.MeshLambertMaterial({color:7829367}),L=new THREE.Mesh(J,K);L.position.y=.00635/C,B.add(L);var M=new THREE.CylinderGeometry(j/C,j/C,i/C,10,1,!1);M.translate(0,-i/C/2,0);var N=new THREE.BufferGeometry;N.fromGeometry(M),M.dispose(),M=N;var O=new THREE.MeshLambertMaterial({color:s,side:THREE.DoubleSide,transparent:!0}),P=new THREE.Mesh(M,O);P.castShadow=!0,P.visible=!1,B.add(P);var Q=new CANNON.Body({mass:k,type:CANNON.Body.KINEMATIC});Q.material=POOLVR.tipMaterial;var R=null;if("Cylinder"!==l){var S=new THREE.SphereBufferGeometry(g/C,10);"Ellipsoid"===l?(S.scale(1,h/g,1),Q.addShape(new CANNON.Ellipsoid(g,h,g))):Q.addShape(new CANNON.Sphere(g));var T=new THREE.MeshLambertMaterial({color:t,transparent:!0});R=new THREE.Mesh(S,T),R.castShadow=!0,P.add(R)}else{var U=new CANNON.Quaternion;U.setFromEuler(-Math.PI/2,0,0,"XYZ");var V=new CANNON.Vec3(0,-g,0);Q.addShape(new CANNON.Cylinder(g,g,2*g,8),V,U)}b.addBody(Q);var W=new THREE.Object3D;W.scale.set(1,.001,1),B.add(W),W.visible=!1;var X=new THREE.MeshBasicMaterial({color:8704}),Y=P.geometry.clone(),Z=new THREE.Mesh(Y,X);if(W.add(Z),"Ellipsoid"===l);else if("Sphere"===l){R.geometry.computeBoundingSphere();var $=new THREE.CircleBufferGeometry(R.geometry.boundingSphere.radius).rotateX(-Math.PI/2),_=new THREE.Mesh($,X);W.add(_)}var aa=new THREE.Object3D,ba=new THREE.Object3D,ca=[aa,ba];B.add(aa),B.add(ba);var da=new THREE.MeshBasicMaterial({color:u,transparent:!0,opacity:0}),ea=.0216/C,fa=.22/C,ga=new THREE.CylinderGeometry(ea,ea,fa);N=new THREE.BufferGeometry,N.fromGeometry(ga),ga.dispose(),ga=N;var ha=new THREE.Mesh(ga,da),ia=[ha,ha.clone()];aa.add(ia[0]),ba.add(ia[1]);var ja=.025/C,ka=new THREE.SphereBufferGeometry(ja).scale(1,.5,1),la=new THREE.Mesh(ka,da);la.castShadow=!0;var ma=[la,la.clone()];aa.add(ma[0]),ba.add(ma[1]),ja=.005/C;var na=new THREE.SphereBufferGeometry(ja),oa=new THREE.Mesh(na,da),pa=[[oa,oa.clone(),oa.clone(),oa.clone(),oa.clone()],[oa.clone(),oa.clone(),oa.clone(),oa.clone(),oa.clone()]];aa.add(pa[0][0],pa[0][1],pa[0][2],pa[0][3],pa[0][4]),ba.add(pa[1][0],pa[1][1],pa[1][2],pa[1][3],pa[1][4]);var qa=oa.clone();qa.scale.set(1.4,1.4,1.4);var ra=[[qa,qa.clone(),qa.clone(),qa.clone(),qa.clone()],[qa.clone(),qa.clone(),qa.clone(),qa.clone(),qa.clone()]];aa.add(ra[0][0],ra[0][1],ra[0][2],ra[0][3],ra[0][4]),ba.add(ra[1][0],ra[1][1],ra[1][2],ra[1][3],ra[1][4]);var sa=oa.clone();sa.scale.set(1.1,1.1,1.1);var ta=[[sa,sa.clone(),sa.clone(),sa.clone(),sa.clone()],[sa.clone(),sa.clone(),sa.clone(),sa.clone(),sa.clone()]];aa.add(ta[0][0],ta[0][1],ta[0][2],ta[0][3],ta[0][4]),ba.add(ta[1][0],ta[1][1],ta[1][2],ta[1][3],ta[1][4]);var ua=0;Q.addEventListener(CANNON.Body.COLLIDE_EVENT_NAME,function(a){ua++,1===ua?setTimeout(function(){POOLVR.synthSpeaker.speak("You moved a ball.  Good job.")},250):16===ua&&setTimeout(function(){POOLVR.synthSpeaker.speak("You are doing a great job.")},3e3)});var va,wa=POOLVR.config.H_table,xa=new THREE.Quaternion,ya=new THREE.Vector3,za=new THREE.Vector3,Aa=new THREE.Vector3,Ba=new CANNON.Vec3(0,1,0),Ca=new CANNON.Vec3;return{toolRoot:B,leapController:x,updateTool:f,updateToolPostStep:d,moveToolRoot:e}}function onLoad(){"use strict";POOLVR.loadConfig(),console.log("POOLVR.config =\n"+JSON.stringify(POOLVR.config,void 0,2));var a=POOLVR.avatar;if(a.position.fromArray(POOLVR.config.initialPosition),a.heading=0,a.floatMode=!1,a.toolMode=!1,POOLVR.synthSpeaker=new SynthSpeaker({volume:POOLVR.config.synthSpeakerVolume,rate:.8,pitch:.5}),POOLVR.config.useTextGeomLogger){var b=new THREE.FontLoader;b.load("fonts/Anonymous Pro_Regular.js",function(b){var c=new TextGeomUtils.TextGeomCacher(b,{size:.12}),d=new THREE.MeshBasicMaterial({color:16724496});POOLVR.textGeomLogger=new TextGeomUtils.TextGeomLogger(c,{material:d,nrows:7,lineHeight:.216}),a.add(POOLVR.textGeomLogger.root),POOLVR.textGeomLogger.root.position.set(-2.5,1,-3.5)})}else POOLVR.textGeomLogger={root:new THREE.Object3D,log:function(a){console.log(a)},clear:function(){}};THREE.py.parse(THREEPY_SCENE).then(function(b){if(!POOLVR.config.useBasicMaterials){var c=new THREE.SpotLight(16777198,1,8,Math.PI/2);c.position.set(0,3,0),c.castShadow=!0,c.shadow.camera.near=.01,c.shadow.camera.far=4,c.shadow.camera.fov=90,b.add(c)}if(POOLVR.config.usePointLight){var d=new THREE.PointLight(11176038,.8,40);d.position.set(4,5,2.5),b.add(d)}var e=new THREE.Vector3(0,1,0),f=combineObjects(POOLVR.config,{onResetVRSensor:function(a,b){var c=POOLVR.app.camera;POOLVR.avatar.heading+=a-c.rotation.y,POOLVR.toolRoot.rotation.y-=a-c.rotation.y,POOLVR.toolRoot.position.sub(b),POOLVR.toolRoot.position.applyAxisAngle(e,-a+c.rotation.y),POOLVR.toolRoot.position.add(c.position),POOLVR.avatar.updateMatrixWorld()}});POOLVR.app=new WebVRApplication(b,f),a.add(POOLVR.app.camera),b.add(a),POOLVR.setup(),requestAnimationFrame(POOLVR.animate()),POOLVR.startTutorial()})}THREE.py=function(){"use strict";function a(a,c){function d(a){function b(a,b,c){var d=4*(b+a.width*c),e=a.data;return{r:e[d],g:e[d+1],b:e[d+2],a:e[d+3]}}a.traverse(function(a){if(a.userData&&a.userData.heightfieldImage){var c=a.userData.heightfieldImage,d=a.userData.heightfieldScale||1,f=e[c];if(f){var g=document.createElement("canvas");g.width=f.width,g.height=f.height;var h=g.getContext("2d");h.drawImage(f,0,0);for(var i=h.getImageData(0,0,f.width,f.height),j=a.geometry.getAttribute("position"),k=a.geometry.parameters.widthSegments+1,l=a.geometry.parameters.heightSegments+1,m=0,n=0;l>n;++n)for(var o=0;k>o;++o){var p=b(i,o,n);j.setZ(m++,d*(p.r+256*p.g+65536*p.b)/16777216)}j.needsUpdate=!0,a.geometry.computeFaceNormals(),a.geometry.computeVertexNormals(),a.geometry.normalsNeedUpdate=!0,a.geometry.computeBoundingSphere(),a.geometry.computeBoundingBox()}}})}var e,f=new THREE.ObjectLoader,g=new THREE.LoadingManager,h=new THREE.TextureLoader(g),i=new THREE.CubeTextureLoader(g),j=new THREE.FontLoader(g),k=new Promise(function(k,l){function m(){function g(a){d(a),a.traverse(function(a){a.userData&&a.userData.layers&&a.userData.layers.forEach(function(b){console.log("setting layer "+b),a.layers.set(b)}),a instanceof THREE.Mesh&&(a.geometry.computeBoundingSphere(),a.geometry.computeBoundingBox(),a.material.shading===THREE.FlatShading&&a.geometry.computeFaceNormals())}),c&&c(a),k(a)}a.geometries.forEach(function(a){if("TextGeometry"===a.type){a.parameters.font=b[a.font_url];var c=new THREE.TextGeometry(a.text,a.parameters);c.uuid=a.uuid,void 0!==a.name&&(c.name=a.name),n[a.uuid]=c}}),e=f.parseImages(a.images,function(){g(j)});var h=f.parseTextures(a.textures,e),i=f.parseMaterials(a.materials,h),j=f.parseObject(a.object,n,i);(void 0===a.images||0===a.images.length)&&g(j)}var n=f.parseGeometries(a.geometries.filter(function(a){return"TextGeometry"!==a.type}));g.onLoad=m;var o=!1;a.materials&&a.materials.forEach(function(a){if(a.type.endsWith("ShaderMaterial")&&a.uniforms){var b=a.uniforms;for(var c in b){var d=b[c];"t"===d.type&&(Array.isArray(d.value)&&6===d.value.length?(d.value=i.load(d.value),o=!0):"string"==typeof d.value&&(d.value=h.load(d.value),o=!0))}}}),a.geometries.forEach(function(a){"TextGeometry"===a.type&&void 0===b[a.font_url]&&(b[a.font_url]=null,j.load(a.font_url,function(c){b[a.font_url]=c}),o=!0)}),o===!1&&m()});return k}var b={};return{parse:a,fonts:b}}(),THREE.py.CANNONize=function(a,b){"use strict";function c(a,b){var d;if(a.body)return a.body;if(a instanceof THREE.Mesh){var e={mass:b.mass,position:a.getWorldPosition(),quaternion:a.getWorldQuaternion()};return void 0!==b.linearDamping&&(e.linearDamping=b.linearDamping),void 0!==b.angularDamping&&(e.angularDamping=b.angularDamping),d=new CANNON.Body(e),d.mesh=a,b.shapes.forEach(function(b){var c,e,f,g,h,i;switch(b){case"Plane":c=new CANNON.Plane;break;case"Box":var j=new CANNON.Vec3;a.geometry.computeBoundingBox(),j.x=a.scale.x*(a.geometry.boundingBox.max.x-a.geometry.boundingBox.min.x)/2,j.y=a.scale.y*(a.geometry.boundingBox.max.y-a.geometry.boundingBox.min.y)/2,j.z=a.scale.z*(a.geometry.boundingBox.max.z-a.geometry.boundingBox.min.z)/2,c=new CANNON.Box(j);break;case"Sphere":a.geometry.computeBoundingSphere(),c=new CANNON.Sphere(a.geometry.boundingSphere.radius);break;case"ConvexPolyhedron":var k=[],l=[];if(a.geometry instanceof THREE.BufferGeometry){for(g=a.geometry.getAttribute("position").array,i=0;i<g.length;i+=3)k.push(new CANNON.Vec3(g[i],g[i+1],g[i+2]));for(g=a.geometry.index.array,i=0;i<g.length;i+=3)h=[g[i],g[i+1],g[i+2]],l.push(h)}else a.geometry instanceof THREE.Geometry;c=new CANNON.ConvexPolyhedron(k,l);break;case"Cylinder":c=new CANNON.Cylinder(a.geometry.parameters.radiusTop,a.geometry.parameters.radiusBottom,a.geometry.parameters.height,a.geometry.parameters.radialSegments),e=new CANNON.Quaternion,e.setFromEuler(-Math.PI/2,0,0,"XYZ");break;case"Heightfield":g=a.geometry.getAttribute("position").array,"PlaneBufferGeometry"!==a.geometry.type&&alert("uh oh!");for(var m=a.geometry.parameters.widthSegments+1,n=a.geometry.parameters.heightSegments+1,o=a.geometry.parameters.width/a.geometry.parameters.widthSegments,p=[],q=0;m>q;++q){p.push(new Float32Array(n));for(var r=0;n>r;++r)p[q][r]=g[3*(m*(n-r-1)+q)+2]}c=new CANNON.Heightfield(p,{elementSize:o}),f=new CANNON.Vec3,f.x=-a.geometry.parameters.width/2,f.y=-a.geometry.parameters.height/2;break;case"Trimesh":var s,t;if(a.geometry instanceof THREE.BufferGeometry)s=a.geometry.getAttribute("position").array,t=a.geometry.index.array;else{for(s=[],i=0;i<a.geometry.vertices.length;i++){var u=a.geometry.vertices[i];s.push(u.x,u.y,u.z)}for(t=[],i=0;i<a.geometry.faces.length;i++)h=a.geometry.faces[i],t.push(h.a,h.b,h.c)}c=new CANNON.Trimesh(s,t);break;case"Ellipsoid":console.warn("TODO");break;default:console.error("unknown shape type: "+b)}d.addShape(c,f,e)}),a.body=d,d}if(a instanceof THREE.Object3D){var f=[];return a.children.forEach(function(a){f.push(c(a,b))}),f}console.error("makeCANNON error")}a.updateMatrixWorld(),a.traverse(function(a){if(a.userData&&a.userData.cannonData){var d=c(a,a.userData.cannonData);b&&(d instanceof CANNON.Body?b.addBody(d):d.forEach(function(a){b.addBody(a)}))}})};var TextGeomUtils=function(){"use strict";function a(a,b){b=b||{};var c={font:a,size:b.size||.12,height:b.height||0,curveSegments:b.curveSegments||2};this.geometries={};for(var d=0;d<f.length;d++){var e=f[d],g=new THREE.TextGeometry(e,c),h=new THREE.BufferGeometry;h.fromGeometry(g),g.dispose(),this.geometries[e]=h}this.makeObject=function(a,b){for(var d=new THREE.Object3D,e=0;e<a.length;e++){var f=a[e];if(" "!==f){var g=new THREE.Mesh(this.geometries[f],b);g.position.x=.8*c.size*e,d.add(g)}}return d}.bind(this)}function b(a,b){b=b||{};var c=b.material||new THREE.MeshBasicMaterial({color:16720385}),d=b.nrows||20,e=(b.ncols||30,b.lineHeight||.216),f={};this.root=new THREE.Object3D,this.log=function(b){for(var g=b.split(/\n/),h=0;h<g.length;h++){var i=g[h],j=f[i];if(j){var k=j.clone();k.position.y=0,this.root.add(k)}else j=a.makeObject(i,c),this.root.add(j),f[i]=j}var l=[];for(h=g.length-1;h<this.root.children.length-d;h++)l.push(this.root.children[h]);for(h=0;h<l.length;h++)this.root.remove(l[h]);for(h=0;h<this.root.children.length;h++){var m=this.root.children[h];m.position.y=(this.root.children.length-h)*e}}.bind(this),this.clear=function(){for(var a=[],b=0;b<this.root.children.length;b++)a.push(this.root.children[b]);for(b=0;b<a.length;b++)this.root.remove(a[b])}.bind(this)}var c="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",d="0123456789",e=",./;'[]\\-=<>?:\"{}|_+~!@#$%^&*()",f=c+d+e;return{TextGeomCacher:a,TextGeomLogger:b}}(),URL_PARAMS=function(){"use strict";var a={};location.search.substr(1).split("&").forEach(function(b){var c=b.split("=")[0],d=decodeURIComponent(b.split("=")[1]);c in a?a[c].push(d):a[c]=[d]});for(var b in a)1===a[b].length&&(a[b]=a[b][0]),"true"===a[b]?a[b]=!0:"false"===a[b]&&(a[b]=!1);return a}(),WebVRSound=function(a){"use strict";function b(){var b=d[g];return g=(g+1)%a,b}a=a||4;for(var c=new AudioContext,d=[],e=0;a>e;e++){var f=c.createGain();f.connect(c.destination),f.gain.value=1,d.push(f)}var g=0,h=function(a,d){var e=c.createBufferSource(),f=b();f.gain.value=d,e.connect(f),e.buffer=a,e.start(0)};return{audioContext:c,getNextGainNode:b,playBuffer:h}}(),SynthSpeaker=function(){"use strict";function a(a){a=a||{},this.volume=a.volume||1,this.rate=a.rate||1,this.pitch=a.pitch||1,this.queue=[],this.onBegins=[],this.onEnds=[],this.speaking=!1;var b=function(){var a=this.onEnds.shift();if(a&&a(),this.utterance=new SpeechSynthesisUtterance,this.utterance.volume=this.volume,this.utterance.rate=this.rate,this.utterance.pitch=this.pitch,this.utterance.onend=b,this.queue.length>0){this.utterance.text=this.queue.shift();var c=this.onBegins.shift();c&&c(),speechSynthesis.speak(this.utterance)}else this.speaking=!1}.bind(this);this.utterance=new SpeechSynthesisUtterance,this.utterance.onend=b,this.utterance.volume=this.volume,this.utterance.rate=this.rate,this.utterance.pitch=this.pitch}return a.prototype.speak=function(a,b,c){this.onEnds.push(c),this.speaking?(this.queue.push(a),this.onBegins.push(b)):(b&&b(),this.utterance.text=a,this.speaking=!0,speechSynthesis.speak(this.utterance))},window.speechSynthesis?a:(console.warn("speechSynthesis not supported"),function(){this.volume=0,this.rate=1,this.pitch=1,this.speak=function(a,b,c){b&&b(),c&&c()}})}();POOLVR.commands={toggleVRControls:function(){POOLVR.app.toggleVRControls()},toggleWireframe:function(){POOLVR.app.toggleWireframe()},resetVRSensor:function(){POOLVR.app.resetVRSensor()},resetTable:function(){POOLVR.resetTable()},autoPosition:function(){POOLVR.autoPosition()},selectNextBall:function(){POOLVR.selectNextBall()},selectPrevBall:function(){POOLVR.selectNextBall(-1)},saveConfig:function(){POOLVR.saveConfig()}},POOLVR.keyboardCommands={turnLeft:{buttons:[-Primrose.Input.Keyboard.LEFTARROW]},turnRight:{buttons:[Primrose.Input.Keyboard.RIGHTARROW]},driveForward:{buttons:[-Primrose.Input.Keyboard.W]},driveBack:{buttons:[Primrose.Input.Keyboard.S]},strafeLeft:{buttons:[-Primrose.Input.Keyboard.A]},strafeRight:{buttons:[Primrose.Input.Keyboard.D]},floatUp:{buttons:[Primrose.Input.Keyboard.E]},floatDown:{buttons:[-Primrose.Input.Keyboard.C]},moveToolUp:{buttons:[Primrose.Input.Keyboard.O]},moveToolDown:{buttons:[Primrose.Input.Keyboard.PERIOD]},moveToolForwards:{buttons:[Primrose.Input.Keyboard.I]},moveToolBackwards:{buttons:[Primrose.Input.Keyboard.K]},moveToolLeft:{buttons:[Primrose.Input.Keyboard.J]},moveToolRight:{buttons:[Primrose.Input.Keyboard.L]},rotateToolCW:{buttons:[Primrose.Input.Keyboard.U]},rotateToolCCW:{buttons:[Primrose.Input.Keyboard.Y]},toggleVRControls:{buttons:[Primrose.Input.Keyboard.V],commandDown:POOLVR.commands.toggleVRControls,dt:.25},toggleWireframe:{buttons:[Primrose.Input.Keyboard.NUMBER0],commandDown:POOLVR.commands.toggleWireframe,dt:.25},resetVRSensor:{buttons:[Primrose.Input.Keyboard.Z],commandDown:POOLVR.commands.resetVRSensor,dt:.25},resetTable:{buttons:[Primrose.Input.Keyboard.R],commandDown:POOLVR.commands.resetTable,dt:.5},autoPosition:{buttons:[Primrose.Input.Keyboard.P],commandDown:POOLVR.commands.autoPosition,dt:.5},selectNextBall:{buttons:[Primrose.Input.Keyboard.ADD],commandDown:POOLVR.commands.selectNextBall,dt:.5},selectPrevBall:{buttons:[Primrose.Input.Keyboard.SUBTRACT],commandDown:POOLVR.commands.selectPrevBall,dt:.5},saveConfig:{buttons:[Primrose.Input.Keyboard.NUMBER1],commandDown:POOLVR.commands.saveConfig,dt:.5}},POOLVR.keyboardCommands=makeObjectArray(POOLVR.keyboardCommands,"name"),POOLVR.keyboard=new Primrose.Input.Keyboard("keyboard",window,POOLVR.keyboardCommands);var DEADZONE=.2;POOLVR.gamepadCommands={strafe:{axes:[Primrose.Input.Gamepad.LSX],deadzone:DEADZONE},drive:{axes:[Primrose.Input.Gamepad.LSY],deadzone:DEADZONE},"float":{axes:[-Primrose.Input.Gamepad.LSY],deadzone:DEADZONE},dheading:{axes:[-Primrose.Input.Gamepad.LSX],deadzone:DEADZONE},pitch:{axes:[Primrose.Input.Gamepad.LSY],deadzone:DEADZONE,integrate:!0,max:.5*Math.PI,min:-.5*Math.PI},toggleFloatMode:{buttons:[Primrose.Input.Gamepad.XBOX_BUTTONS.leftStick],commandDown:function(){POOLVR.avatar.floatMode=!0},commandUp:function(){POOLVR.avatar.floatMode=!1}},toolStrafe:{axes:[Primrose.Input.Gamepad.RSX],deadzone:DEADZONE},toolDrive:{axes:[Primrose.Input.Gamepad.RSY],deadzone:DEADZONE},toolFloat:{axes:[-Primrose.Input.Gamepad.RSY],deadzone:DEADZONE},toggleToolFloatMode:{buttons:[Primrose.Input.Gamepad.XBOX_BUTTONS.rightStick],commandDown:function(){POOLVR.avatar.toolMode=!0},commandUp:function(){POOLVR.avatar.toolMode=!1}},resetVRSensor:{buttons:[Primrose.Input.Gamepad.XBOX_BUTTONS.back],commandDown:POOLVR.commands.resetVRSensor,dt:.25},selectNextBall:{buttons:[Primrose.Input.Gamepad.XBOX_BUTTONS.rightBumper],commandDown:POOLVR.commands.selectNextBall,dt:.25},selectPrevBall:{buttons:[Primrose.Input.Gamepad.XBOX_BUTTONS.leftBumper],commandDown:POOLVR.commands.selectPrevBall,dt:.25},autoPosition:{buttons:[Primrose.Input.Gamepad.XBOX_BUTTONS.Y],commandDown:POOLVR.commands.autoPosition,dt:.25},saveConfig:{buttons:[Primrose.Input.Gamepad.XBOX_BUTTONS.right],commandDown:POOLVR.commands.saveConfig,dt:.5}},POOLVR.gamepadCommands=makeObjectArray(POOLVR.gamepadCommands,"name"),POOLVR.gamepad=new Primrose.Input.Gamepad("gamepad",POOLVR.gamepadCommands),POOLVR.gamepad.addEventListener("gamepadconnected",function(a){this.isGamepadSet()||(this.setGamepad(a),console.log("gamepad "+a+" connected"))}.bind(POOLVR.gamepad),!1),POOLVR.config.toolOptions=POOLVR.config.toolOptions||{},POOLVR.config.toolOptions.toolLength=URL_PARAMS.toolLength||POOLVR.config.toolOptions.toolLength,POOLVR.config.toolOptions.toolRadius=URL_PARAMS.toolRadius||POOLVR.config.toolOptions.toolRadius,POOLVR.config.toolOptions.toolMass=URL_PARAMS.toolMass||POOLVR.config.toolOptions.toolMass,POOLVR.config.toolOptions.toolOffset=URL_PARAMS.toolOffset||POOLVR.config.toolOptions.toolOffset,POOLVR.config.toolOptions.toolRotation=URL_PARAMS.toolRotation||POOLVR.config.toolOptions.toolRotation,POOLVR.config.toolOptions.tipShape=URL_PARAMS.tipShape||POOLVR.config.toolOptions.tipShape,POOLVR.config.toolOptions.host=URL_PARAMS.host,POOLVR.config.toolOptions.port=URL_PARAMS.port,POOLVR.config.useBasicMaterials=void 0!==URL_PARAMS.useBasicMaterials?URL_PARAMS.useBasicMaterials:POOLVR.config.useBasicMaterials,POOLVR.config.useBasicMaterials?(POOLVR.config.usePointLight=!1,POOLVR.config.useShadowMap=!1):(POOLVR.config.usePointLight=void 0!==URL_PARAMS.usePointLight?URL_PARAMS.usePointLight:POOLVR.config.usePointLight,POOLVR.config.useShadowMap=void 0!==URL_PARAMS.useShadowMap?URL_PARAMS.useShadowMap:POOLVR.config.useShadowMap),POOLVR.config.useTextGeomLogger=void 0!==URL_PARAMS.useTextGeomLogger?URL_PARAMS.useTextGeomLogger:POOLVR.config.useTextGeomLogger,POOLVR.config.synthSpeakerVolume=URL_PARAMS.synthSpeakerVolume||POOLVR.config.synthSpeakerVolume,POOLVR.config.initialPosition=POOLVR.config.initialPosition,POOLVR.profile=URL_PARAMS.profile||POOLVR.profile||"default",POOLVR.saveConfig=function(){"use strict";POOLVR.config.toolOptions.toolOffset=[POOLVR.toolRoot.position.x,POOLVR.toolRoot.position.y,POOLVR.toolRoot.position.z],POOLVR.config.toolOptions.toolRotation=POOLVR.toolRoot.rotation.y,localStorage.setItem(POOLVR.profile,JSON.stringify(POOLVR.config)),console.log("saved configuration for profile '"+POOLVR.profile+"':"),console.log(JSON.stringify(POOLVR.config,void 0,2))},POOLVR.loadConfig=function(){"use strict";var a=localStorage.getItem(POOLVR.profile);if(a){a=JSON.parse(a);for(var b in a)POOLVR.config.hasOwnProperty(b)&&(POOLVR.config[b]=a[b]);console.log("loaded configuration for profile '"+POOLVR.profile+"':"),console.log(JSON.stringify(POOLVR.config,void 0,2))}},POOLVR.ballMaterial=new CANNON.Material,POOLVR.ballBallContactMaterial=new CANNON.ContactMaterial(POOLVR.ballMaterial,POOLVR.ballMaterial,{restitution:.92,friction:.14}),POOLVR.playableSurfaceMaterial=new CANNON.Material,POOLVR.ballPlayableSurfaceContactMaterial=new CANNON.ContactMaterial(POOLVR.ballMaterial,POOLVR.playableSurfaceMaterial,{restitution:.3,friction:.21}),POOLVR.cushionMaterial=new CANNON.Material,POOLVR.ballCushionContactMaterial=new CANNON.ContactMaterial(POOLVR.ballMaterial,POOLVR.cushionMaterial,{restitution:.8,friction:.12}),POOLVR.floorMaterial=new CANNON.Material,POOLVR.floorBallContactMaterial=new CANNON.ContactMaterial(POOLVR.floorMaterial,POOLVR.ballMaterial,{restitution:.86,friction:.4}),POOLVR.railMaterial=new CANNON.Material,POOLVR.railBallContactMaterial=new CANNON.ContactMaterial(POOLVR.railMaterial,POOLVR.ballMaterial,{restitution:.7,friction:.07}),POOLVR.tipMaterial=new CANNON.Material,POOLVR.tipBallContactMaterial=new CANNON.ContactMaterial(POOLVR.tipMaterial,POOLVR.ballMaterial,{restitution:.01,friction:.15,contactEquationRelaxation:3,frictionEquationRelaxation:3}),POOLVR.ballMeshes=[],POOLVR.ballBodies=[],POOLVR.initialPositions=[],POOLVR.onTable=[!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0],POOLVR.nextBall=1,POOLVR.playCollisionSound=function(){"use strict";var a,b=new XMLHttpRequest;b.responseType="arraybuffer",b.open("GET","/sounds/ballBall.ogg"),b.onload=function(){WebVRSound.audioContext.decodeAudioData(this.response,function(b){a=b})},b.send();var c=function(b){WebVRSound.playBuffer(a,Math.min(1,b/10))};return c}(),POOLVR.playPocketedSound=function(){"use strict";var a,b=new XMLHttpRequest;b.responseType="arraybuffer",b.open("GET","/sounds/ballPocketed.ogg"),b.onload=function(){WebVRSound.audioContext.decodeAudioData(this.response,function(b){a=b})},b.send();var c=function(){WebVRSound.playBuffer(a,.5)};return c}(),POOLVR.setup=function(){"use strict";var a=new CANNON.World;a.gravity.set(0,-POOLVR.config.gravity,0),a.defaultContactMaterial.contactEquationStiffness=1e6,a.defaultContactMaterial.frictionEquationStiffness=1e6,a.defaultContactMaterial.contactEquationRelaxation=3,a.defaultContactMaterial.frictionEquationRelaxation=3,a.solver.iterations=9,POOLVR.world=a;var b=POOLVR.app.scene;THREE.py.CANNONize(b,a),a.addMaterial(POOLVR.ballMaterial),a.addMaterial(POOLVR.playableSurfaceMaterial),a.addMaterial(POOLVR.cushionMaterial),a.addMaterial(POOLVR.floorMaterial),a.addMaterial(POOLVR.tipMaterial),a.addMaterial(POOLVR.railMaterial),a.addContactMaterial(POOLVR.ballBallContactMaterial),a.addContactMaterial(POOLVR.ballPlayableSurfaceContactMaterial),a.addContactMaterial(POOLVR.ballCushionContactMaterial),a.addContactMaterial(POOLVR.floorBallContactMaterial),a.addContactMaterial(POOLVR.tipBallContactMaterial),a.addContactMaterial(POOLVR.railBallContactMaterial);var c=addTool(POOLVR.avatar,a,POOLVR.config.toolOptions);POOLVR.toolRoot=c.toolRoot,POOLVR.updateTool=c.updateTool,POOLVR.updateToolPostStep=c.updateToolPostStep,POOLVR.moveToolRoot=c.moveToolRoot;var d,e=[],f=[];b.traverse(function(a){if(a instanceof THREE.Mesh){if(POOLVR.config.useBasicMaterials&&(a.material instanceof THREE.MeshLambertMaterial||a.material instanceof THREE.MeshPhongMaterial)){var b=a.material;a.material=new THREE.MeshBasicMaterial({color:b.color.getHex(),transparent:b.transparent,side:b.side}),b.dispose()}var c;a.name.startsWith("ball ")?(c=Number(a.name.split(" ")[1]),POOLVR.ballMeshes[c]=a,POOLVR.ballBodies[c]=a.body,POOLVR.initialPositions[c]=(new THREE.Vector3).copy(a.position),a.body.bounces=0,a.body.ballNum=c,a.body.material=POOLVR.ballMaterial):a.name.startsWith("ballStripeMesh")?(c=Number(a.name.split(" ")[1]),e[c]=a):a.name.startsWith("ballShadowMesh")?(c=Number(a.name.split(" ")[1]),f[c]=a):"playableSurfaceMesh"===a.name?a.body.material=POOLVR.playableSurfaceMaterial:a.name.endsWith("CushionMesh")?a.body.material=POOLVR.cushionMaterial:"floorMesh"===a.name?(a.body.material=POOLVR.floorMaterial,d=a):a.name.endsWith("RailMesh")&&(a.body.material=POOLVR.railMaterial)}});var g=POOLVR.config.H_table;POOLVR.updateBallsPostStep=function(){for(var a=0;a<POOLVR.ballMeshes.length;a++){var b=POOLVR.ballMeshes[a],c=POOLVR.ballBodies[a];b.position.copy(c.interpolatedPosition);var d=e[a];void 0!==d&&d.quaternion.copy(c.interpolatedQuaternion);var h=f[a];h&&(h.position.y=-(b.position.y-g)+4e-4)}},d.body.addEventListener(CANNON.Body.COLLIDE_EVENT_NAME,function(a){var b=a.body;0===b.ballNum?(POOLVR.textGeomLogger.log("SCRATCH."),POOLVR.synthSpeaker.speak("Scratch."),b.position.copy(POOLVR.initialPositions[0]),b.velocity.set(0,0,0),b.angularVelocity.set(0,0,0)):void 0!==b.ballNum&&(b.bounces++,1===b.bounces?(POOLVR.playPocketedSound(),POOLVR.onTable[b.ballNum]=!1,POOLVR.nextBall=POOLVR.onTable.indexOf(!0),-1===POOLVR.nextBall&&(POOLVR.synthSpeaker.speak("You cleared the table.  Well done."),POOLVR.textGeomLogger.log("YOU CLEARED THE TABLE.  WELL DONE."),POOLVR.resetTable())):7===b.bounces&&(b.sleep(),b.mesh.visible=!1))});var h=new CANNON.Vec3;a.addEventListener("beginContact",function(a){var b=a.bodyA,c=a.bodyB;b.material===c.material&&(b.velocity.vsub(c.velocity,h),POOLVR.playCollisionSound(h.lengthSquared()))})},POOLVR.selectNextBall=function(a){"use strict";a=a||1;for(var b=Math.max(1,Math.min(15,POOLVR.nextBall+a));!POOLVR.onTable[b]&&(b=Math.max(1,Math.min(15,b+a)),b!==POOLVR.nextBall););POOLVR.nextBall!=b&&(POOLVR.nextBall=b,POOLVR.textGeomLogger.log("BALL "+POOLVR.nextBall+" SELECTED"))},POOLVR.resetTable=function(){"use strict";POOLVR.ballBodies.forEach(function(a,b){a.wakeUp(),a.position.copy(POOLVR.initialPositions[b]),a.velocity.set(0,0,0),a.angularVelocity.set(0,0,0),a.bounces=0,POOLVR.onTable[b]=!0,a.mesh.visible=!0}),POOLVR.synthSpeaker.speaking===!1&&POOLVR.synthSpeaker.speak("Table reset."),POOLVR.nextBall=1,POOLVR.textGeomLogger.log("TABLE RESET.")},POOLVR.avatar=new THREE.Object3D,POOLVR.autoPosition=function(){"use strict";var a=new THREE.Vector3,b=new THREE.Vector3(0,1,0),c=POOLVR.avatar;return function(){POOLVR.textGeomLogger.log("YOU ARE BEING AUTO-POSITIONED.  NEXT BALL: "+POOLVR.nextBall),c.heading=Math.atan2(-(POOLVR.ballMeshes[POOLVR.nextBall].position.x-POOLVR.ballMeshes[0].position.x),-(POOLVR.ballMeshes[POOLVR.nextBall].position.z-POOLVR.ballMeshes[0].position.z)),c.quaternion.setFromAxisAngle(b,c.heading),c.updateMatrixWorld(),a.copy(POOLVR.toolRoot.position),c.localToWorld(a),a.sub(POOLVR.ballMeshes[0].position),a.y=0,c.position.sub(a)}}(),POOLVR.moveAvatar=function(){"use strict";var a=new THREE.Vector3(0,1,0),b=.333,c=.1,d=POOLVR.avatar;return function(e,f,g){var h=e.getValue("floatUp")+e.getValue("floatDown"),i=e.getValue("driveBack")+e.getValue("driveForward"),j=e.getValue("strafeRight")+e.getValue("strafeLeft"),k=-.8*g*(e.getValue("turnLeft")+e.getValue("turnRight"));
if(d.floatMode?(h+=f.getValue("float"),j+=f.getValue("strafe")):(i+=f.getValue("drive"),k+=.8*g*f.getValue("dheading")),h*=c,j||i){var l=b*Math.min(1,1/Math.sqrt(i*i+j*j));j*=l,i*=l}else j=0,i=0;if(0!==h||0!==j||0!==k||0!==i){d.heading+=k;var m=Math.cos(d.heading),n=Math.sin(d.heading);d.quaternion.setFromAxisAngle(a,d.heading),d.position.x+=g*(j*m+i*n),d.position.z+=g*(i*m-j*n),d.position.y+=g*h}}}(),POOLVR.startTutorial=function(){"use strict";POOLVR.synthSpeaker.speak("Hello.  Welcome. To. Pool-ver.",function(){POOLVR.textGeomLogger.log("HELLO.  WELCOME TO POOLVR.")}),POOLVR.synthSpeaker.speak("Please wave a stick-like object in front of your Leap Motion controller.",function(){POOLVR.textGeomLogger.log("PLEASE WAVE A STICK-LIKE OBJECT IN FRONT OF YOUR"),POOLVR.textGeomLogger.log("LEAP MOTION CONTROLLER.")}),POOLVR.synthSpeaker.speak("Keep the stick within the interaction box when you want to make contact with.  A ball.",function(){POOLVR.textGeomLogger.log("KEEP THE STICK WITHIN THE INTERACTION BOX WHEN YOU WANT"),POOLVR.textGeomLogger.log("TO MAKE CONTACT WITH A BALL...")})},POOLVR.animate=function(){"use strict";function a(m){c("frame").start(),b.start(),c("raf").tick(),c("fps").frame();var o=.001*(m-n);c("updatetool").start(),h(),c("updatetool").end(),c("updatevrcontrols").start(),f.vrControls.enabled&&f.vrControls.update(),c("updatevrcontrols").end(),c("render").start(),f.vrManager.render(f.scene,f.camera,m),c("render").end(),requestAnimationFrame(a),c("step").start(),g.step(1/60,o,5),c("step").end(),c("poststep").start(),i(),l(),c("poststep").end(),c("updatekeyboardgamepad").start(),d.update(o),e.update(o),k(d,e,o),j(d,e,o),c("updatekeyboardgamepad").end(),n=m,c("frame").end(),c().update()}var b,c,d=POOLVR.keyboard,e=POOLVR.gamepad,f=POOLVR.app,g=POOLVR.world,h=POOLVR.updateTool,i=POOLVR.updateToolPostStep,j=POOLVR.moveToolRoot,k=POOLVR.moveAvatar,l=POOLVR.updateBallsPostStep;if(URL_PARAMS.rstats){var m=new threeStats(POOLVR.app.renderer);b=new glStats,c=new rStats({CSSPath:"lib/rstats/",values:{frame:{caption:"Total frame time (ms)"},calls:{caption:"Calls (three.js)"},raf:{caption:"Time since last rAF (ms)"},updatetool:{caption:"Leap frame update (ms)"},updatevrcontrols:{caption:"VRControls update (ms)"},step:{caption:"Cannon step (ms)"},poststep:{caption:"Cannon post-step (ms)"},updatekeyboardgamepad:{caption:"Move avatar / Leap (ms)"}},fractions:[{base:"frame",steps:["updatetool","updatevrcontrols","render","step","poststep","updatekeyboardgamepad"]}],plugins:[m,b]})}else b={start:function(){}},c=function(a){return{start:function(){},end:function(){},tick:function(){},frame:function(){},update:function(){}}};var n=0;return a};