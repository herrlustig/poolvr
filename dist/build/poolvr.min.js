!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){POOLVR.parseURIConfig=function(){"use strict";POOLVR.config=POOLVR.config||{},POOLVR.config.useBasicMaterials?(POOLVR.config.useSpotLight=!1,POOLVR.config.usePointLight=!1,POOLVR.config.useShadowMap=!1):(POOLVR.config.useSpotLight=void 0!==YAWVRB.Utils.URL_PARAMS.useSpotLight?YAWVRB.Utils.URL_PARAMS.useSpotLight:POOLVR.config.useSpotLight||!0,POOLVR.config.usePointLight=void 0!==YAWVRB.Utils.URL_PARAMS.usePointLight?YAWVRB.Utils.URL_PARAMS.usePointLight:POOLVR.config.usePointLight,POOLVR.config.useShadowMap=void 0!==YAWVRB.Utils.URL_PARAMS.useShadowMap?YAWVRB.Utils.URL_PARAMS.useShadowMap:POOLVR.config.useShadowMap),POOLVR.config.toolOptions=POOLVR.config.toolOptions||{},POOLVR.config.toolOptions.useShadowMesh=!POOLVR.config.useShadowMap,POOLVR.config.toolOptions.shadowPlane=POOLVR.config.H_table+.001,POOLVR.config.toolOptions.shadowMaterial=POOLVR.shadowMaterial},POOLVR.saveConfig=function(profileName){"use strict";var key="POOLVR"+POOLVR.version+"_"+profileName;localStorage.setItem(key,JSON.stringify(POOLVR.config,void 0,2)),console.log('saved configuration for profile "%s":',profileName),console.log(localStorage[key])},POOLVR.loadConfig=function(profileName){"use strict";var config,localStorageConfig=localStorage.getItem("POOLVR"+POOLVR.version+"_"+profileName);if(localStorageConfig){config={},localStorageConfig=JSON.parse(localStorageConfig);for(var k in localStorageConfig)config[k]=localStorageConfig[k];console.log('loaded configuration for profile "%s"',profileName)}return config},POOLVR.switchMaterials=function(useBasicMaterials){var materials=useBasicMaterials?POOLVR.basicMaterials:POOLVR.nonBasicMaterials;POOLVR.app.scene.traverse(function(node){if(node instanceof THREE.Mesh){var material=node.material,uuid=material.uuid;materials[uuid]&&(node.material=materials[uuid])}})},POOLVR.selectNextBall=function(inc){"use strict";inc=inc||1;var next=Math.max(1,Math.min(15,POOLVR.nextBall+inc));if(next!==POOLVR.nextBall){for(;!POOLVR.onTable[next];){var _next=next;if(next=Math.max(1,Math.min(15,next+inc)),next===_next)break}POOLVR.nextBall!==next&&(POOLVR.nextBall=next,POOLVR.textGeomLogger.log("BALL "+POOLVR.nextBall+" SELECTED"))}},POOLVR.resetTable=function(){"use strict";POOLVR.ballBodies.forEach(function(body,ballNum){body.wakeUp(),body.position.copy(POOLVR.initialPositions[ballNum]),body.velocity.set(0,0,0),body.angularVelocity.set(0,0,0),body.bounces=0,POOLVR.onTable[ballNum]=!0,body.mesh.visible=!0;var shadowMesh=POOLVR.ballShadowMeshes[ballNum];shadowMesh&&(shadowMesh.visible=!0)}),POOLVR.synthSpeaker.speaking===!1&&POOLVR.synthSpeaker.speak("Table reset."),POOLVR.nextBall=1,POOLVR.textGeomLogger.log("TABLE RESET.")},POOLVR.autoPosition=function(){"use strict";var nextVector=new THREE.Vector3,UP=THREE.Object3D.DefaultUp,speakCount=0;return function(){POOLVR.synthSpeaker.speaking===!1&&speakCount<=3&&(POOLVR.synthSpeaker.speak("You are being auto-positioned."),3===speakCount&&POOLVR.synthSpeaker.speak("I will stop saying that now."),speakCount++);var avatar=POOLVR.app.stage,heading=Math.atan2(-(POOLVR.ballMeshes[POOLVR.nextBall].position.x-POOLVR.ballMeshes[0].position.x),-(POOLVR.ballMeshes[POOLVR.nextBall].position.z-POOLVR.ballMeshes[0].position.z));avatar.quaternion.setFromAxisAngle(UP,heading),nextVector.copy(POOLVR.leapTool.toolRoot.position),nextVector.applyQuaternion(avatar.quaternion),nextVector.add(avatar.position),nextVector.sub(POOLVR.ballMeshes[0].position),nextVector.y=0,avatar.position.sub(nextVector),avatar.updateMatrix(),avatar.updateMatrixWorld(),POOLVR.leapTool.updateToolMapping()}}(),POOLVR.stroke=function(){"use strict";var velocity=new THREE.Vector3;return function(){velocity.set(0,0,-3.5),velocity.applyQuaternion(POOLVR.leapTool.worldQuaternion);var body=POOLVR.ballBodies[0];body.velocity.copy(velocity)}}(),POOLVR.moveStage=function(){"use strict";return function(keyboard,gamepadValues,dt){var stage=POOLVR.app.stage,moveFB=0,moveRL=0,moveUD=0,turnRL=0;keyboard&&(moveFB+=keyboard.moveForward-keyboard.moveBackward,moveUD+=keyboard.moveUp-keyboard.moveDown,moveRL+=keyboard.moveRight-keyboard.moveLeft,turnRL+=keyboard.turnRight-keyboard.turnLeft);for(var i=0;i<gamepadValues.length;i++){var values=gamepadValues[i];values.toggleFloatMode?(values.moveFB&&(moveUD-=values.moveFB),values.turnLR&&(moveRL+=values.turnLR)):(values.moveFB&&(moveFB-=values.moveFB),values.turnLR&&(turnRL+=values.turnLR)),values.moveRL&&(moveRL+=values.moveRL)}(moveFB||moveRL||moveUD||turnRL)&&YAWVRB.Utils.moveObject(stage,dt,moveFB,moveRL,moveUD,turnRL,0)}}(),POOLVR.moveToolRoot=function(){"use strict";return function(keyboard,gamepadValues,dt){var moveFB=0,moveRL=0,moveUD=0,turnRL=0;keyboard&&(moveFB+=keyboard.moveToolForward-keyboard.moveToolBackward,moveUD+=keyboard.moveToolUp-keyboard.moveToolDown,moveRL+=keyboard.moveToolRight-keyboard.moveToolLeft,turnRL+=keyboard.rotateToolCW-keyboard.rotateToolCCW);for(var i=0;i<gamepadValues.length;i++){var values=gamepadValues[i];values.toggleToolFloatMode?(values.moveToolFB&&(moveUD-=values.moveToolFB),values.turnToolLR&&(moveRL+=values.turnToolLR)):(values.moveToolFB&&(moveFB-=values.moveToolFB),values.turnToolLR&&(turnRL+=values.turnToolLR))}(moveFB||moveRL||moveUD||turnRL)&&(YAWVRB.Utils.moveObject(POOLVR.leapTool.toolRoot,dt,moveFB,moveRL,moveUD,turnRL,0),POOLVR.leapTool.setDeadtime(0))}}(),POOLVR.startTutorial=function(){"use strict";POOLVR.synthSpeaker.speak("Hello.  Welcome. To. Pool-ver.",function(){POOLVR.textGeomLogger.log("HELLO.  WELCOME TO POOLVR.")}),POOLVR.synthSpeaker.speak("Please wave a stick-like object in front of your Leap Motion controller.",function(){POOLVR.textGeomLogger.log("PLEASE WAVE A STICK-LIKE OBJECT IN FRONT OF YOUR"),POOLVR.textGeomLogger.log("LEAP MOTION CONTROLLER.")}),POOLVR.synthSpeaker.speak("Keep the stick within the interaction box when you want to make contact with.  A ball.",function(){POOLVR.textGeomLogger.log("KEEP THE STICK WITHIN THE INTERACTION BOX WHEN YOU WANT"),POOLVR.textGeomLogger.log("TO MAKE CONTACT WITH A BALL...")})}},{}],2:[function(require,module,exports){POOLVR.commands={toggleMenu:function(){POOLVR.toggleMenu()},toggleVRControls:function(){POOLVR.app.toggleVRControls()},toggleVR:function(){POOLVR.app.toggleVR()},toggleWireframe:function(){POOLVR.app.toggleWireframe()},resetVRSensor:function(){POOLVR.app.resetVRSensor()},resetTable:POOLVR.resetTable,autoPosition:POOLVR.autoPosition,selectNextBall:function(){POOLVR.selectNextBall()},selectPrevBall:function(){POOLVR.selectNextBall(-1)},stroke:POOLVR.stroke},POOLVR.keyboardCommands={turnLeft:{buttons:[37]},turnRight:{buttons:[39]},moveForward:{buttons:[87]},moveBackward:{buttons:[83]},moveLeft:{buttons:[65]},moveRight:{buttons:[68]},moveUp:{buttons:[69]},moveDown:{buttons:[67]},moveToolUp:{buttons:[79]},moveToolDown:{buttons:[190]},moveToolForward:{buttons:[73]},moveToolBackward:{buttons:[75]},moveToolLeft:{buttons:[74]},moveToolRight:{buttons:[76]},rotateToolCW:{buttons:[85]},rotateToolCCW:{buttons:[89]},toggleVR:{buttons:[YAWVRB.Keyboard.KEYCODES.NUMBER9],commandDown:POOLVR.commands.toggleVR},toggleWireframe:{buttons:[YAWVRB.Keyboard.KEYCODES.B],commandDown:POOLVR.commands.toggleWireframe},resetVRSensor:{buttons:[90],commandDown:POOLVR.commands.resetVRSensor},resetTable:{buttons:[82],commandDown:POOLVR.commands.resetTable},autoPosition:{buttons:[80],commandDown:POOLVR.commands.autoPosition},selectNextBall:{buttons:[107],commandDown:POOLVR.commands.selectNextBall},selectPrevBall:{buttons:[109],commandDown:POOLVR.commands.selectPrevBall},stroke:{buttons:[YAWVRB.Keyboard.KEYCODES.SPACEBAR],commandDown:POOLVR.commands.stroke},toggleMenu:{buttons:[YAWVRB.Keyboard.KEYCODES.M],commandDown:POOLVR.commands.toggleMenu}},POOLVR.keyboard=new YAWVRB.Keyboard(window,POOLVR.keyboardCommands),POOLVR.xboxGamepadCommands={turnLR:{axes:[YAWVRB.Gamepads.AXES.LSX]},moveFB:{axes:[YAWVRB.Gamepads.AXES.LSY]},toggleFloatMode:{buttons:[YAWVRB.Gamepads.BUTTONS.leftStick]},moveToolFB:{axes:[YAWVRB.Gamepads.AXES.RSY]},turnToolLR:{axes:[YAWVRB.Gamepads.AXES.RSX]},toggleToolFloatMode:{buttons:[YAWVRB.Gamepads.BUTTONS.rightStick]},resetVRSensor:{buttons:[YAWVRB.Gamepads.BUTTONS.back],commandDown:POOLVR.commands.resetVRSensor},selectNextBall:{buttons:[YAWVRB.Gamepads.BUTTONS.rightBumper],commandDown:POOLVR.commands.selectNextBall},selectPrevBall:{buttons:[YAWVRB.Gamepads.BUTTONS.leftBumper],commandDown:POOLVR.commands.selectPrevBall},stroke:{buttons:[YAWVRB.Gamepads.BUTTONS.X],commandDown:POOLVR.commands.stroke},autoPosition:{buttons:[YAWVRB.Gamepads.BUTTONS.Y],commandDown:POOLVR.commands.autoPosition},toggleVR:{buttons:[YAWVRB.Gamepads.BUTTONS.start],commandDown:POOLVR.commands.toggleVR}},POOLVR.vrGamepadACommands={moveToolFB:{axes:[YAWVRB.Gamepads.AXES.LSY],flipAxes:!0},turnToolLR:{axes:[YAWVRB.Gamepads.AXES.LSX]},toggleToolFloatMode:{buttons:[0]},toggleVR:{buttons:[3],commandDown:POOLVR.commands.toggleVR},resetTable:{buttons:[2],commandDown:POOLVR.commands.resetTable}},POOLVR.vrGamepadBCommands={resetVRSensor:{buttons:[3],commandDown:POOLVR.commands.resetVRSensor}},POOLVR.destekGamepadCommands={moveFB:{axes:[0]},moveRL:{axes:[1],flipAxes:!0},autoPosition:{buttons:[0],commandDown:POOLVR.commands.autoPosition}},function(){"use strict";var world=new CANNON.World;world.gravity.set(0,-POOLVR.config.gravity,0),world.defaultContactMaterial.contactEquationStiffness=2e7,world.defaultContactMaterial.frictionEquationStiffness=2e6,world.defaultContactMaterial.contactEquationRelaxation=2,world.defaultContactMaterial.frictionEquationRelaxation=3,world.solver.iterations=15,POOLVR.world=world,POOLVR.ballMaterial=new CANNON.Material,POOLVR.ballBallContactMaterial=new CANNON.ContactMaterial(POOLVR.ballMaterial,POOLVR.ballMaterial,{restitution:.92,friction:.14}),POOLVR.playableSurfaceMaterial=new CANNON.Material,POOLVR.ballPlayableSurfaceContactMaterial=new CANNON.ContactMaterial(POOLVR.ballMaterial,POOLVR.playableSurfaceMaterial,{restitution:.24,friction:.16,contactEquationStiffness:7e8}),POOLVR.cushionMaterial=new CANNON.Material,POOLVR.ballCushionContactMaterial=new CANNON.ContactMaterial(POOLVR.ballMaterial,POOLVR.cushionMaterial,{restitution:.8,friction:.12}),POOLVR.floorMaterial=new CANNON.Material,POOLVR.floorBallContactMaterial=new CANNON.ContactMaterial(POOLVR.floorMaterial,POOLVR.ballMaterial,{restitution:.86,friction:.4}),POOLVR.railMaterial=new CANNON.Material,POOLVR.railBallContactMaterial=new CANNON.ContactMaterial(POOLVR.railMaterial,POOLVR.ballMaterial,{restitution:.7,friction:.07}),POOLVR.tipMaterial=new CANNON.Material,POOLVR.tipBallContactMaterial=new CANNON.ContactMaterial(POOLVR.tipMaterial,POOLVR.ballMaterial,{restitution:.01,friction:.13,contactEquationRelaxation:2,frictionEquationRelaxation:2}),POOLVR.openVRTipMaterial=new CANNON.Material,POOLVR.openVRTipBallContactMaterial=new CANNON.ContactMaterial(POOLVR.openVRTipMaterial,POOLVR.ballMaterial,{restitution:.95,friction:.25,contactEquationRelaxation:1,frictionEquationRelaxation:1,contactEquationStiffness:4e8}),world.addMaterial(POOLVR.playableSurfaceMaterial),world.addMaterial(POOLVR.cushionMaterial),world.addMaterial(POOLVR.railMaterial),world.addMaterial(POOLVR.floorMaterial),world.addMaterial(POOLVR.ballMaterial),world.addMaterial(POOLVR.tipMaterial),world.addMaterial(POOLVR.openVRTipMaterial),world.addContactMaterial(POOLVR.ballBallContactMaterial),world.addContactMaterial(POOLVR.ballPlayableSurfaceContactMaterial),world.addContactMaterial(POOLVR.ballCushionContactMaterial),world.addContactMaterial(POOLVR.floorBallContactMaterial),world.addContactMaterial(POOLVR.railBallContactMaterial),world.addContactMaterial(POOLVR.tipBallContactMaterial),world.addContactMaterial(POOLVR.openVRTipBallContactMaterial)}(),POOLVR.shadowMaterial=new THREE.MeshBasicMaterial({color:8704}),POOLVR.basicMaterials={},POOLVR.nonBasicMaterials={},POOLVR.profile="default"},{}],3:[function(require,module,exports){window.POOLVR=window.POOLVR||{},require("./sounds.js"),require("./actions.js"),require("./config.js"),require("./menu.js"),window.onLoad=function(){"use strict";function onGamepadConnected(e){var gamepad=e.gamepad;gamepad&&(/openvr/i.test(gamepad.id)?gamepadA?(console.log("OpenVR controller B connected"),YAWVRB.Gamepads.setGamepadCommands(gamepad.index,POOLVR.vrGamepadBCommands)):(console.log("OpenVR controller A connected"),gamepadA=gamepad,YAWVRB.Gamepads.setGamepadCommands(gamepad.index,POOLVR.vrGamepadACommands),POOLVR.openVRTool.mesh.visible=!0,POOLVR.openVRTool.shadowMesh&&(POOLVR.openVRTool.shadowMesh.visible=!0),POOLVR.openVRTool.setGamepad(gamepad),POOLVR.world.addBody(POOLVR.openVRTool.body)):/xbox/i.test(gamepad.id)||/xinput/i.test(gamepad.id)?YAWVRB.Gamepads.setGamepadCommands(gamepad.index,POOLVR.xboxGamepadCommands):(/3232/i.test(gamepad.id)||/b629/i.test(gamepad.id))&&YAWVRB.Gamepads.setGamepadCommands(gamepad.index,POOLVR.destekGamepadCommands))}const INCH2METERS=.0254;YAWVRB.Utils.URL_PARAMS.clearLocalStorage&&(console.log("clearing localStorage..."),localStorage.clear()),THREE.Object3D.DefaultMatrixAutoUpdate=!1;var loadedConfig=POOLVR.loadConfig(POOLVR.profile);POOLVR.config=loadedConfig||POOLVR.config,POOLVR.parseURIConfig(),console.log("POOLVR.config:"),console.log(POOLVR.config),POOLVR.synthSpeaker=new YAWVRB.SynthSpeaker({volume:POOLVR.config.synthSpeakerVolume||.6,rate:POOLVR.config.synthSpeakerRate||.75,pitch:POOLVR.config.synthSpeakerPitch||.5}),POOLVR.setupMenu();var rendererOptions={canvas:document.getElementById("webgl-canvas"),antialias:(void 0!==YAWVRB.Utils.URL_PARAMS.antialias?YAWVRB.Utils.URL_PARAMS.antialias:POOLVR.config.antialias)||!YAWVRB.Utils.isMobile()},appConfig={onResetVRSensor:function(){POOLVR.leapTool.updateToolMapping()}};if(POOLVR.app=new YAWVRB.App(void 0,appConfig,rendererOptions),POOLVR.app.stage.add(POOLVR.app.camera),POOLVR.config.useShadowMap&&(POOLVR.app.renderer.shadowMap.enabled=!0,POOLVR.app.renderer.shadowMap.type=THREE.PCFSoftShadowMap),POOLVR.config.useTextGeomLogger){var fontLoader=new THREE.FontLoader;fontLoader.load("fonts/Anonymous Pro_Regular.js",function(font){var textGeomCacher=new YAWVRB.TextGeomUtils.TextGeomCacher(font,{size:.12,curveSegments:2}),textGeomLoggerMaterial=new THREE.MeshBasicMaterial({color:16724496});POOLVR.textGeomLogger=new YAWVRB.TextGeomUtils.TextGeomLogger(textGeomCacher,{material:textGeomLoggerMaterial,nrows:8,lineHeight:.216}),POOLVR.app.stage.add(POOLVR.textGeomLogger.root),POOLVR.textGeomLogger.root.position.set(-2.7,.88,-3.3),POOLVR.textGeomLogger.root.updateMatrix()})}else POOLVR.textGeomLogger={root:new THREE.Object3D,log:function(msg){console.log(msg)},update:function(){},clear:function(){}};loadedConfig||POOLVR.synthSpeaker.speak("Hello. Welcome. To. Pool-ver.");var leapIndicator=document.getElementById("leapIndicator");POOLVR.leapTool=YAWVRB.LeapMotion.makeTool(YAWVRB.Utils.combineObjects(POOLVR.config.toolOptions,{onConnect:function(){leapIndicator.innerHTML="connected",leapIndicator.style["background-color"]="rgba(60, 100, 20, 0.8)",POOLVR.app.stage.add(POOLVR.leapTool.toolRoot),POOLVR.world.addBody(POOLVR.leapTool.toolBody)},onStreamingStarted:function(){leapIndicator.innerHTML="connected, streaming",leapIndicator.style["background-color"]="rgba(20, 160, 20, 0.8)",POOLVR.leapTool.toolRoot.visible=!0,POOLVR.app.vrControls.update(),POOLVR.leapTool.toolRoot.position.y=POOLVR.app.camera.position.y-.0508,POOLVR.leapTool.toolRoot.updateMatrix(),POOLVR.leapTool.toolRoot.updateMatrixWorld()},onStreamingStopped:function(){leapIndicator.innerHTML="connected, streaming stopped",leapIndicator.style["background-color"]="rgba(60, 100, 20, 0.8)",POOLVR.leapTool.toolRoot.visible=!1},onDisconnect:function(){leapIndicator.innerHTML="disconnected",leapIndicator.style["background-color"]="rgba(60, 20, 20, 0.4)",POOLVR.leapTool.toolRoot.visible=!1},tipMaterial:POOLVR.tipMaterial})),POOLVR.leapTool.toolMesh.renderOrder=-1,POOLVR.leapTool.toolRoot.visible=!1,POOLVR.leapTool.leapController.connect(),window.addEventListener("beforeunload",function(){POOLVR.leapTool.leapController.disconnect()},!1),POOLVR.openVRTool=YAWVRB.Gamepads.makeTool(YAWVRB.Utils.combineObjects(POOLVR.config.toolOptions,{tipMaterial:POOLVR.openVRTipMaterial})),POOLVR.openVRTool.mesh.visible=!1,POOLVR.openVRTool.shadowMesh&&(POOLVR.openVRTool.shadowMesh.visible=!1),POOLVR.app.stage.add(POOLVR.openVRTool.mesh);var gamepadA;YAWVRB.Gamepads.setOnGamepadConnected(onGamepadConnected),YAWVRB.Gamepads.setOnGamepadDisconnected(function(evt){gamepadA&&gamepadA.index===evt.gamepad.index&&(POOLVR.openVRTool.mesh.visible=!1,POOLVR.openVRTool.shadowMesh&&(POOLVR.openVRTool.shadowMesh.visible=!1))}),THREE.py.parse(THREEPY_SCENE).then(function(scene){scene.autoUpdate=!1,POOLVR.app.scene=scene,POOLVR.app.scene.add(POOLVR.app.stage),POOLVR.leapTool.toolShadowMesh&&POOLVR.app.scene.add(POOLVR.leapTool.toolShadowMesh),POOLVR.openVRTool&&POOLVR.openVRTool.shadowMesh&&POOLVR.app.scene.add(POOLVR.openVRTool.shadowMesh);var centerSpotLight=new THREE.SpotLight(16777198,1,8,Math.PI/4);centerSpotLight.position.set(0,3,0),centerSpotLight.updateMatrix(),centerSpotLight.castShadow=!0,centerSpotLight.visible=POOLVR.config.useSpotLight,scene.add(centerSpotLight),centerSpotLight.shadow.mapSize.set(1024,1024),centerSpotLight.shadow.camera.matrixAutoUpdate=!0,centerSpotLight.shadow.camera.near=1,centerSpotLight.shadow.camera.far=4,centerSpotLight.shadow.camera.fov=80,centerSpotLight.shadow.camera.updateProjectionMatrix(),POOLVR.centerSpotLight=centerSpotLight;var pointLight=new THREE.PointLight(11176038,.8,40);pointLight.position.set(4,5,2.5),pointLight.updateMatrix(),pointLight.updateMatrixWorld(),scene.add(pointLight),POOLVR.pointLight=pointLight,POOLVR.pointLight.visible=POOLVR.config.usePointLight,navigator.getVRDisplays().then(function(vrDisplays){var vrDisplay=vrDisplays[0],isVive=/vive/i.test(vrDisplay.displayName);if(vrDisplay.stageParameters&&vrDisplay.stageParameters.sittingToStandingTransform){var sizeX=vrDisplay.stageParameters.sizeX,sizeZ=vrDisplay.stageParameters.sizeZ;if(sizeX&&sizeZ&&sizeX>sizeZ){var rotation=(new THREE.Matrix4).makeRotationY(Math.PI/2);POOLVR.app.scene.children.forEach(function(child){child!==POOLVR.app.stage&&(child.matrix.multiplyMatrices(rotation,child.matrix),child.matrix.decompose(child.position,child.quaternion,child.scale),child.updateMatrixWorld(!0))})}}else POOLVR.app.vrControls.update(),POOLVR.leapTool.toolRoot.position.y=POOLVR.app.camera.position.y-.0508,POOLVR.leapTool.toolRoot.updateMatrix(),POOLVR.app.stage.position.y=1.1557,POOLVR.app.stage.position.z=.5*POOLVR.config.L_table+12*INCH2METERS,POOLVR.app.stage.updateMatrix(),POOLVR.app.stage.updateMatrixWorld();THREE.py.CANNONize(scene,POOLVR.world),POOLVR.ballMeshes=[],POOLVR.ballBodies=[],POOLVR.initialPositions=[],POOLVR.onTable=[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0],POOLVR.nextBall=1,POOLVR.ballShadowMeshes=[];var floorBody,ceilingBody;if(scene.traverse(function(node){if(node instanceof THREE.Mesh){var ballNum;node.name.startsWith("ballMesh")?(ballNum=Number(node.name.split(" ")[1]),POOLVR.ballMeshes[ballNum]=node,POOLVR.ballBodies[ballNum]=node.body,POOLVR.initialPositions[ballNum]=(new THREE.Vector3).copy(node.position),node.body.bounces=0,node.body.ballNum=ballNum,node.body.material=POOLVR.ballMaterial):"playableSurfaceMesh"===node.name?node.body.material=POOLVR.playableSurfaceMaterial:node.name.endsWith("CushionMesh")?node.body.material=POOLVR.cushionMaterial:"floorMesh"===node.name?(floorBody=node.body,floorBody.material=POOLVR.floorMaterial):"ceilingMesh"===node.name?(ceilingBody=node.body,ceilingBody.material=POOLVR.floorMaterial):node.name.endsWith("RailMesh")&&(node.body.material=POOLVR.railMaterial)}}),!POOLVR.config.useShadowMap){var ballShadowGeom=new THREE.CircleBufferGeometry(.5*POOLVR.config.ball_diameter,16);ballShadowGeom.rotateX(-.5*Math.PI),POOLVR.ballMeshes.forEach(function(mesh,ballNum){var ballShadowMesh=new THREE.Mesh(ballShadowGeom,POOLVR.shadowMaterial);ballShadowMesh.position.copy(mesh.position),ballShadowMesh.position.y=POOLVR.config.H_table+4e-4,POOLVR.ballShadowMeshes[ballNum]=ballShadowMesh,scene.add(ballShadowMesh)})}floorBody.addEventListener(CANNON.Body.COLLIDE_EVENT_NAME,function(evt){var body=evt.body;if(0===body.ballNum)POOLVR.textGeomLogger.log("SCRATCH."),POOLVR.synthSpeaker.speak("Scratch."),body.position.copy(POOLVR.initialPositions[0]),body.velocity.set(0,0,0),body.angularVelocity.set(0,0,0);else if(void 0!==body.ballNum)if(body.bounces++,1===body.bounces)POOLVR.playPocketedSound(),POOLVR.onTable[body.ballNum]=!1,POOLVR.nextBall=POOLVR.onTable.slice(1).indexOf(!0)+1,0===POOLVR.nextBall&&(POOLVR.synthSpeaker.speak("You cleared the table.  Well done."),POOLVR.textGeomLogger.log("YOU CLEARED THE TABLE.  WELL DONE."),POOLVR.resetTable());else if(7===body.bounces){body.sleep(),body.mesh.visible=!1;var shadowMesh=POOLVR.ballShadowMeshes[body.ballNum];shadowMesh&&(shadowMesh.visible=!1)}});var relVelocity=new CANNON.Vec3,tipCollisionCounter=0;if(POOLVR.world.addEventListener("beginContact",function(evt){var bodyA=evt.bodyA,bodyB=evt.bodyB;bodyA.velocity.vsub(bodyB.velocity,relVelocity),bodyA.material===bodyB.material?POOLVR.playCollisionSound(relVelocity.lengthSquared()):bodyA.material===POOLVR.openVRTipMaterial&&bodyB.material===POOLVR.ballMaterial&&POOLVR.openVRTool.body.sleepState===CANNON.Body.AWAKE&&(gamepadA&&"haptics"in gamepadA&&gamepadA.haptics.length>0&&gamepadA.haptics[0].vibrate(relVelocity.lengthSquared()/10,10),tipCollisionCounter++,1===tipCollisionCounter?POOLVR.synthSpeaker.speak("You moved a ball.  Good job."):16===tipCollisionCounter&&POOLVR.synthSpeaker.speak("You are doing a great job."))}),scene.updateMatrixWorld(!0),POOLVR.leapTool.updateToolMapping(),isVive){var loader=new THREE.OBJLoader;loader.setPath("node_modules/three/examples/models/obj/vive-controller/"),loader.load("vr_controller_vive_1_5.obj",function(object){var loader=new THREE.TextureLoader;loader.setPath("node_modules/three/examples/models/obj/vive-controller/");var viveDiffuseMap=loader.load("onepointfive_texture.png"),viveSpecularMap=loader.load("onepointfive_spec.png"),controller=object.children[0];controller.material.map=viveDiffuseMap,controller.material.specularMap=viveSpecularMap;var controllerMesh=object.clone();POOLVR.openVRTool.mesh.add(controllerMesh),setTimeout(function(){POOLVR.openVRTool.mesh.remove(controllerMesh)},14e3),POOLVR.startAnimateLoop()})}else POOLVR.startAnimateLoop()})})},POOLVR.startAnimateLoop=function(){"use strict";function updateBallsPostStep(){for(var i=0;i<POOLVR.ballMeshes.length;i++){var mesh=POOLVR.ballMeshes[i],body=POOLVR.ballBodies[i];mesh.position.copy(body.interpolatedPosition),mesh.quaternion.copy(body.interpolatedQuaternion),mesh.updateMatrix(),mesh.updateMatrixWorld();var shadowMesh=POOLVR.ballShadowMeshes[i];shadowMesh&&(shadowMesh.position.x=mesh.position.x,shadowMesh.position.z=mesh.position.z,shadowMesh.updateMatrix(),shadowMesh.updateMatrixWorld())}}function animate(t){var dt=.001*(t-lt);textGeomLogger.update(t),leapTool.updateTool(dt);var gamepadValues=YAWVRB.Gamepads.update();openVRTool.update(dt),render(),world.step(Math.min(1/60,dt),dt,10),leapTool.updateToolPostStep(),updateBallsPostStep(),moveStage(keyboard,gamepadValues,dt),stage.updateMatrixWorld(),moveToolRoot(keyboard,gamepadValues,dt),leapTool.updateToolMapping(),lt=t,requestAnimationFrame(animate)}POOLVR.app.scene.traverse(function(node){if(node instanceof THREE.Mesh&&(node.material instanceof THREE.MeshLambertMaterial||node.material instanceof THREE.MeshPhongMaterial)&&void 0===POOLVR.basicMaterials[node.material.uuid]){var basicMaterial=new THREE.MeshBasicMaterial({color:node.material.color.getHex(),transparent:node.material.transparent,side:node.material.side,map:node.material.map});POOLVR.basicMaterials[node.material.uuid]=basicMaterial,POOLVR.nonBasicMaterials[basicMaterial.uuid]=node.material}}),POOLVR.switchMaterials(POOLVR.config.useBasicMaterials);var keyboard=POOLVR.keyboard,render=POOLVR.app.render,world=POOLVR.world,stage=POOLVR.app.stage,moveToolRoot=POOLVR.moveToolRoot,moveStage=POOLVR.moveStage,textGeomLogger=POOLVR.textGeomLogger,leapTool=POOLVR.leapTool,openVRTool=POOLVR.openVRTool,lt=0;requestAnimationFrame(animate)}},{"./actions.js":1,"./config.js":2,"./menu.js":4,"./sounds.js":5}],4:[function(require,module,exports){POOLVR.setupMenu=function(){"use strict";function onFocus(){POOLVR.keyboard.enabled=!1}function onBlur(){POOLVR.keyboard.enabled=!0}function onLeapAddressChange(){var host=leapAddressInput.value;POOLVR.config.toolOptions.host=host,POOLVR.saveConfig(POOLVR.profile),POOLVR.leapTool.leapController.connection.host=host,POOLVR.leapTool.leapController.connection.disconnect(!0),POOLVR.leapTool.leapController.connect()}var overlay=document.getElementById("overlay");POOLVR.toggleMenu=function(){"none"===overlay.style.display?overlay.style.display="block":overlay.style.display="none"};for(var inputs=document.querySelectorAll("input"),i=0;i<inputs.length;i++)inputs[i].addEventListener("focus",onFocus,!1),inputs[i].addEventListener("blur",onBlur,!1);var useBasicMaterialsInput=document.getElementById("useBasicMaterials");useBasicMaterialsInput.checked=POOLVR.config.useBasicMaterials;var useShadowMapInput=document.getElementById("useShadowMap");useShadowMapInput.checked=POOLVR.config.useShadowMap;var usePointLightInput=document.getElementById("usePointLight");usePointLightInput.checked=POOLVR.config.usePointLight;var useSpotLightInput=document.getElementById("useSpotLight");useSpotLightInput.checked=POOLVR.config.useSpotLight,useBasicMaterialsInput.addEventListener("change",function(){POOLVR.config.useBasicMaterials=useBasicMaterialsInput.checked,POOLVR.config.useBasicMaterials||POOLVR.config.useSpotLight||POOLVR.config.usePointLight||(useSpotLightInput.checked=!0,POOLVR.config.useSpotLight=!0,POOLVR.centerSpotLight.visible=!0),POOLVR.saveConfig(POOLVR.profile),POOLVR.switchMaterials(POOLVR.config.useBasicMaterials)},!1),useShadowMapInput.addEventListener("change",function(){POOLVR.config.useShadowMap=useShadowMapInput.checked,POOLVR.saveConfig(POOLVR.profile),window.confirm("This change requires a page reload to take effect - reload now?")&&document.location.reload()},!1),usePointLightInput.addEventListener("change",function(){POOLVR.config.usePointLight=usePointLightInput.checked,POOLVR.saveConfig(POOLVR.profile),POOLVR.pointLight.visible=POOLVR.config.usePointLight},!1),useSpotLightInput.addEventListener("change",function(){POOLVR.config.useSpotLight=useSpotLightInput.checked,POOLVR.saveConfig(POOLVR.profile),POOLVR.centerSpotLight.visible=POOLVR.config.useSpotLight},!1);var leapAddressInput=document.getElementById("leapAddress");leapAddressInput.value=POOLVR.config.toolOptions.host||"localhost",leapAddressInput.addEventListener("change",onLeapAddressChange,!1);var vrButton=document.getElementById("vrButton");vrButton.addEventListener("click",function(){POOLVR.app.toggleVR(),vrButton.blur(),overlay.style.display="none"},!1);var fsButton=document.getElementById("fsButton");fsButton.addEventListener("click",function(){POOLVR.app.toggleFullscreen()},!1);var vrDisplay=null;navigator.getVRDisplays?navigator.getVRDisplays().then(function(vrDisplays){for(var i=0;i<vrDisplays.length;i++)if(console.log(vrDisplays[i]),vrDisplays[i].capabilities&&vrDisplays[i].capabilities.canPresent){vrDisplay=vrDisplays[i];break}vrDisplay||(vrButton.style.display="none",vrButton.disabled=!0)}).catch(function(err){vrButton.style.display="none",vrButton.disabled=!0,console.error(err)}):(vrButton.style.display="none",vrButton.disabled=!0,console.warn("navigator does not provide getVRDisplays"))}},{}],5:[function(require,module,exports){POOLVR.playCollisionSound=function(){"use strict";var ballBallBuffer,filename=/Edge/.test(navigator.userAgent)?"sounds/ballBall.mp3":"sounds/ballBall.ogg";YAWVRB.Audio.loadBuffer(filename,function(buffer){ballBallBuffer=buffer});var playCollisionSound=function(v){YAWVRB.Audio.playBuffer(ballBallBuffer,Math.min(1,v/10))};return playCollisionSound}(),POOLVR.playPocketedSound=function(){"use strict";var ballPocketedBuffer,filename=/Edge/.test(navigator.userAgent)?"sounds/ballPocketed.mp3":"sounds/ballPocketed.ogg";YAWVRB.Audio.loadBuffer(filename,function(buffer){ballPocketedBuffer=buffer});var playPocketedSound=function(){YAWVRB.Audio.playBuffer(ballPocketedBuffer,.5)};return playPocketedSound}()},{}]},{},[3]);
